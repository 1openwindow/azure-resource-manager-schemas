{
  "tests": [
    
    {
      "name": "resource - Empty JSON",
      "definition": "./ResourceMetaSchema.json#/definitions/resource",
      "expectedErrors": [
        {
          "message": "Missing required property: description",
          "dataPath": "/"
        }
      ],
      "json": {
      }
    },
    
    {
      "name": "resource - Missing properties",
      "definition": "./ResourceMetaSchema.json#/definitions/resource",
      "json": {
        "description": "Test Resource Description"
      }
    },
    
    {
      "name": "resource - Missing apiVersion",
      "definition": "./ResourceMetaSchema.json#/definitions/resource",
      "expectedErrors": [
        {
          "message": "Missing required property: apiVersion",
          "dataPath": "/properties"
        }
      ],
      "json": {
        "description": "Test Resource Description",
        "properties": {
          "type": { "enum": "Microsoft.Dan/TestType" }
        }
      }
    },
    
    {
      "name": "resource - Missing type",
      "definition": "./ResourceMetaSchema.json#/definitions/resource",
      "expectedErrors": [
        {
          "message": "Missing required property: type",
          "dataPath": "/properties"
        }
      ],
      "json": {
        "description": "Test Resource Description",
        "properties": {
          "apiVersion": "2015-12-02"
        }
      }
    },
    
    {
      "name": "resource - Minimal valid",
      "definition": "./ResourceMetaSchema.json#/definitions/resource",
      "json": {
        "description": "Test Resource Description",
        "properties": {
          "apiVersion": "2015-12-02",
          "type": {
            "enum": [ "Microsoft.Dan/TestResourceType" ]
          }
        }
      }
    },
    
    {
      "name": "resource - Empty child resources",
      "definition": "./ResourceMetaSchema.json#/definitions/resource",
      "json": {
        "description": "Test Resource Description",
        "properties": {
          "apiVersion": "2015-12-02",
          "type": {
            "enum": [ "Microsoft.Dan/TestResourceType" ]
          },
          "resources": {}
        }
      }
    },
    
    {
      "name": "resource - Empty resource properties",
      "definition": "./ResourceMetaSchema.json#/definitions/resource",
      "json": {
        "description": "Test Resource Description",
        "properties": {
          "apiVersion": "2015-12-02",
          "type": {
            "enum": [ "Microsoft.Dan/TestResourceType" ]
          },
          "properties": {}
        }
      }
    },
    
    {
      "name": "resource - Resource properties with string-valued property",
      "definition": "./ResourceMetaSchema.json#/definitions/resource",
      "json": {
        "description": "Test Resource Description",
        "properties": {
          "apiVersion": "2015-12-02",
          "type": {
            "enum": [ "Microsoft.Dan/TestResourceType" ]
          },
          "properties": {
            "testPropertyName": "TestName"
          }
        }
      }
    },
    
    {
      "name": "resource - Resource properties with empty object-valued property",
      "definition": "./ResourceMetaSchema.json#/definitions/resource",
      "json": {
        "description": "Test Resource Description",
        "properties": {
          "apiVersion": "2015-12-02",
          "type": {
            "enum": [ "Microsoft.Dan/TestResourceType" ]
          },
          "properties": {
            "testPropertyName": {}
          }
        }
      }
    },
    
    
    {
      "name": "resourceTypeProperty - Empty JSON",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceTypeProperty",
      "expectedErrors": [
        {
          "message": "Missing required property: enum",
          "dataPath": "/"
        }
      ],
      "json": {
      }
    },
    
    {
      "name": "resourceTypeProperty - Empty enum array",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceTypeProperty",
      "expectedErrors": [
        {
          "message": "Array is too short (0), minimum 1",
          "dataPath": "/enum"
        }
      ],
      "json": {
        "enum": []
      }
    },
    
    {
      "name": "resourceTypeProperty - Enum array with non-string value",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceTypeProperty",
      "expectedErrors": [
        {
          "message": "Invalid type: number (expected string)",
          "dataPath": "/enum/0"
        }
      ],
      "json": {
        "enum": [ 42 ]
      }
    },
    
    {
      "name": "resourceTypeProperty - Enum array with empty string value",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceTypeProperty",
      "expectedErrors": [
        {
          "message": "String is too short (0 chars), minimum 1",
          "dataPath": "/enum/0"
        }
      ],
      "json": {
        "enum": [ "" ]
      }
    },
    
    {
      "name": "resourceTypeProperty - Single enum value",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceTypeProperty",
      "json": {
        "enum": [ "Microsoft.Dan/TestResourceType" ]
      }
    },
    
    {
      "name": "resourceTypeProperty - Multiple enum values",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceTypeProperty",
      "json": {
        "enum": [
          "Microsoft.Dan/TestResourceType1",
          "Microsoft.Dan/TestResourceType2",
          "Microsoft.Dan/TestResourceType3"
         ]
      }
    },
    
    {
      "name": "resourceTypeProperty - Additional property other than enum",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceTypeProperty",
      "expectedErrors": [
        {
          "message": "Additional properties not allowed",
          "dataPath": "/shouldPass"
        }
      ],
      "json": {
        "enum": [ "Microsoft.Dan/TestResourceType" ],
        "shouldPass": false
      }
    },
    
    
    {
      "name": "resourceProperties - Non-object",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceTypeProperty",
      "expectedErrors": [
        {
          "message": "Invalid type: number (expected object)",
          "dataPath": "/"
        }
      ],
      "json": 42
    },
    
    {
      "name": "resourceProperties - Empty JSON object",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperties",
      "json": {
      }
    },
    
    {
      "name": "resourceProperties - Declared type is string",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperties",
      "expectedErrors": [
        {
          "message": "No enum match for: \"string\"",
          "dataPath": "/type"
        }
      ],
      "json": {
        "type": "string"
      }
    },
    
    {
      "name": "resourceProperties - Declared type is object with no properties",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperties",
      "json": {
        "type": "object"
      }
    },
    
    {
      "name": "resourceProperties - Unrecognized property",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperties",
      "expectedErrors": [
        {
          "message": "Additional properties not allowed",
          "dataPath": "/testPropertyName"
        }
      ],
      "json": {
        "testPropertyName": 50
      }
    },
    
    {
      "name": "resourceProperties - Integer value properties",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperties",
      "expectedErrors": [
        {
          "message": "Invalid type: number (expected object)",
          "dataPath": "/properties"
        }
      ],
      "json": {
        "type": "object",
        "properties": 39
      }
    },
    
    {
      "name": "resourceProperties - Empty properties object",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperties",
      "json": {
        "type": "object",
        "properties": {}
      }
    },
    
    {
      "name": "resourceProperties - One valid property",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperties",
      "json": {
        "type": "object",
        "properties": {
          "description": { 
            "type": "string", 
            "description": "Microsoft.DataConnect/connectionManagers: The description of the connectionManager."  
          }
        }
      }
    },
    
    {
      "name": "resourceProperties - Multiple valid properties",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperties",
      "json": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description1"
          },
          "description2": {
            "type": "string",
            "description": "Description2"
          }
        }
      }
    },
    
    {
      "name": "resourceProperty - Non-object",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperty",
      "expectedErrors": [
        {
          "message": "Invalid type: string (expected object)",
          "dataPath": "/"
        }
      ],
      "json": "non-object value"
    },
    
    {
      "name": "resourceProperty - Without description",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperty",
      "expectedErrors": [
        {
          "message": "Missing required property: description",
          "dataPath": "/"
        }
      ],
      "json": {
        "anyOf": [
          { "type": "string" },
          { "$ref": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
        ]
      }
    },
    
    {
      "name": "resourceProperty - String type",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperty",
      "json": { 
        "anyOf": [
          { "type": "string" },
          { "$ref": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
        ], 
        "description": "Test description that describes this property."
      }
    },
    
    {
      "name": "resourceProperty - Number type without expression option",
      "definition": "./ResourceMetaSchema.json#/definitions/resourceProperty",
      "expectedErrors": [],
      "json": {
        "anyOf": [
          { "type": "number" },
          { "$ref": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
        ],
        "description": "Test description that describes this property."
      }
    }
    
  ]
}