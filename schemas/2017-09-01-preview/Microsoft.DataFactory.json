{
  "id": "https://schema.management.azure.com/schemas/2017-09-01-preview/Microsoft.DataFactory.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.DataFactory",
  "description": "Microsoft DataFactory Resource Types",
  "resourceDefinitions": {
    "factories": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The factory name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource tags."
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/FactoryIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity properties of the factory resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FactoryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Factory resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/factories_integrationRuntimes_childResource"
              },
              {
                "$ref": "#/definitions/factories_linkedservices_childResource"
              },
              {
                "$ref": "#/definitions/factories_datasets_childResource"
              },
              {
                "$ref": "#/definitions/factories_pipelines_childResource"
              },
              {
                "$ref": "#/definitions/factories_triggers_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories"
    },
    "factories_datasets": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The dataset name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/datasets"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Dataset"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories/datasets"
    },
    "factories_integrationRuntimes": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The integration runtime name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/integrationRuntimes"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntime"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory nested object which serves as a compute resource for activities."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories/integrationRuntimes"
    },
    "factories_linkedservices": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The linked service name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/linkedservices"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories/linkedservices"
    },
    "factories_pipelines": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The pipeline name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/pipelines"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Pipeline"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A data factory pipeline."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories/pipelines"
    },
    "factories_triggers": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The trigger name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DataFactory/factories/triggers"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Trigger"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure data factory nested object which contains information about creating pipeline run"
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories/triggers"
    }
  },
  "definitions": {
    "Activity": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        },
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "name": {
          "type": "string",
          "description": "Activity name."
        },
        "description": {
          "type": "string",
          "description": "Activity description."
        },
        "dependsOn": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityDependency"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Activity depends on condition."
        }
      },
      "required": [
        "name"
      ],
      "description": "A pipeline activity."
    },
    "ActivityDependency": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "activity": {
          "type": "string",
          "description": "Activity name."
        },
        "dependencyConditions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Succeeded",
                  "Failed",
                  "Skipped",
                  "Completed"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Match-Condition for the dependency."
        }
      },
      "required": [
        "activity",
        "dependencyConditions"
      ],
      "description": "Activity dependency information."
    },
    "ActivityPolicy": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "timeout": {
          "type": "object",
          "properties": {},
          "description": "Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "retry": {
          "type": "object",
          "properties": {},
          "description": "Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "retryIntervalInSeconds": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 30,
              "maximum": 86400
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Interval between each retry attempt (in seconds). The default is 30 sec."
        },
        "secureOutput": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "When set to true, Output from activity is considered as secure and will not be logged to monitoring."
        }
      },
      "description": "Execution policy for an activity."
    },
    "AmazonMWSLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonMWSLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon Marketplace Web Service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonMWS"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Amazon Marketplace Web Service linked service."
    },
    "AmazonMWSLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)"
        },
        "marketplaceID": {
          "type": "object",
          "properties": {},
          "description": "The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)"
        },
        "sellerID": {
          "type": "object",
          "properties": {},
          "description": "The Amazon seller ID."
        },
        "mwsAuthToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "accessKeyId": {
          "type": "object",
          "properties": {},
          "description": "The access key id used to access data."
        },
        "secretKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "endpoint",
        "marketplaceID",
        "sellerID",
        "accessKeyId"
      ],
      "description": "Amazon Marketplace Web Service linked service properties."
    },
    "AmazonMWSObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AmazonMWSObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Amazon Marketplace Web Service dataset."
    },
    "AmazonMWSSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonMWSSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Amazon Marketplace Web Service source."
    },
    "AmazonRedshiftLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonRedshiftLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon Redshift linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonRedshift"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for Amazon Redshift."
    },
    "AmazonRedshiftLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "server": {
          "type": "object",
          "properties": {},
          "description": "The name of the Amazon Redshift server. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The username of the Amazon Redshift source. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "database": {
          "type": "object",
          "properties": {},
          "description": "The database name of the Amazon Redshift source. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ],
      "description": "Amazon Redshift linked service properties."
    },
    "AmazonRedshiftSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "redshiftUnloadSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/RedshiftUnloadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonRedshiftSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for Amazon Redshift Source."
    },
    "AmazonS3Dataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonS3DatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon S3 dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonS3Object"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "A single Amazon Simple Storage Service (S3) object or a set of S3 objects."
    },
    "AmazonS3DatasetTypeProperties": {
      "type": "object",
      "properties": {
        "bucketName": {
          "type": "object",
          "properties": {},
          "description": "The name of the Amazon S3 bucket. Type: string (or Expression with resultType string)."
        },
        "key": {
          "type": "object",
          "properties": {},
          "description": "The key of the Amazon S3 object. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "properties": {},
          "description": "The prefix filter for the S3 object name. Type: string (or Expression with resultType string)."
        },
        "version": {
          "type": "object",
          "properties": {},
          "description": "The version for the S3 object. Type: string (or Expression with resultType string)."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        },
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        }
      },
      "required": [
        "bucketName"
      ],
      "description": "Amazon S3 dataset properties."
    },
    "AmazonS3LinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmazonS3LinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Amazon S3 linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AmazonS3"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for Amazon S3."
    },
    "AmazonS3LinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "object",
          "properties": {},
          "description": "The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string)."
        },
        "secretAccessKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Amazon S3 linked service properties."
    },
    "AvroFormat": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AvroFormat"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The data stored in Avro format."
    },
    "AzureBatchLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureBatchLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Batch linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureBatch"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure Batch linked service."
    },
    "AzureBatchLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "object",
          "properties": {},
          "description": "The Azure Batch account name. Type: string (or Expression with resultType string)."
        },
        "accessKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "batchUri": {
          "type": "object",
          "properties": {},
          "description": "The Azure Batch URI. Type: string (or Expression with resultType string)."
        },
        "poolName": {
          "type": "object",
          "properties": {},
          "description": "The Azure Batch pool name. Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "accountName",
        "batchUri",
        "poolName",
        "linkedServiceName"
      ],
      "description": "Azure Batch linked service properties."
    },
    "AzureBlobDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureBlobDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Blob dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureBlob"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The Azure Blob storage."
    },
    "AzureBlobDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "The path of the Azure Blob storage. Type: string (or Expression with resultType string)."
        },
        "tableRootLocation": {
          "type": "object",
          "properties": {},
          "description": "The root of blob path. Type: string (or Expression with resultType string)."
        },
        "fileName": {
          "type": "object",
          "properties": {},
          "description": "The name of the Azure Blob. Type: string (or Expression with resultType string)."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        },
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        }
      },
      "description": "Azure Blob dataset properties."
    },
    "AzureDatabricksLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDatabricksLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Databricks linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDatabricks"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure Databricks linked service."
    },
    "AzureDatabricksLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "object",
          "properties": {},
          "description": "<REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string)."
        },
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "existingClusterId": {
          "type": "object",
          "properties": {},
          "description": "The id of an existing cluster that will be used for all runs of this job. Type: string (or Expression with resultType string)."
        },
        "newClusterVersion": {
          "type": "object",
          "properties": {},
          "description": "The Spark version of new cluster. Type: string (or Expression with resultType string)."
        },
        "newClusterNumOfWorker": {
          "type": "object",
          "properties": {},
          "description": "Number of worker nodes that new cluster should have. A string formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 as min and 10 as max. Type: string (or Expression with resultType string)."
        },
        "newClusterNodeType": {
          "type": "object",
          "properties": {},
          "description": "The node types of new cluster. Type: string (or Expression with resultType string)."
        },
        "newClusterSparkConf": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "a set of optional, user-specified Spark configuration key-value pairs."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "domain",
        "accessToken"
      ],
      "description": "Azure Databricks linked service properties."
    },
    "AzureDataLakeAnalyticsLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Lake Analytics linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeAnalytics"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure Data Lake Analytics linked service."
    },
    "AzureDataLakeAnalyticsLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "object",
          "properties": {},
          "description": "The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "subscriptionId": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "resourceGroupName": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "dataLakeAnalyticsUri": {
          "type": "object",
          "properties": {},
          "description": "Azure Data Lake Analytics URI Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "accountName",
        "tenant"
      ],
      "description": "Azure Data Lake Analytics linked service properties."
    },
    "AzureDataLakeStoreDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDataLakeStoreDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Lake Store dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStoreFile"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure Data Lake Store dataset."
    },
    "AzureDataLakeStoreDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string)."
        },
        "fileName": {
          "type": "object",
          "properties": {},
          "description": "The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string)."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        },
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        }
      },
      "required": [
        "folderPath"
      ],
      "description": "Azure Data Lake Store dataset properties."
    },
    "AzureDataLakeStoreLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDataLakeStoreLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Lake Store linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStore"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure Data Lake Store linked service."
    },
    "AzureDataLakeStoreLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "dataLakeStoreUri": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Store service URI. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "accountName": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Store account name. Type: string (or Expression with resultType string)."
        },
        "subscriptionId": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "resourceGroupName": {
          "type": "object",
          "properties": {},
          "description": "Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "dataLakeStoreUri"
      ],
      "description": "Azure Data Lake Store linked service properties."
    },
    "AzureDataLakeStoreSink": {
      "type": "object",
      "properties": {
        "copyBehavior": {
          "type": "object",
          "properties": {},
          "description": "The type of copy behavior for copy sink."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStoreSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Data Lake Store sink."
    },
    "AzureDataLakeStoreSource": {
      "type": "object",
      "properties": {
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureDataLakeStoreSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Data Lake source."
    },
    "AzureKeyVaultLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Key Vault linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureKeyVault"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure Key Vault linked service."
    },
    "AzureKeyVaultLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "baseUrl": {
          "type": "object",
          "properties": {},
          "description": "The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "baseUrl"
      ],
      "description": "Azure Key Vault linked service properties."
    },
    "AzureKeyVaultSecretReference": {
      "type": "object",
      "properties": {
        "store": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "secretName": {
          "type": "object",
          "properties": {},
          "description": "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string)."
        },
        "secretVersion": {
          "type": "object",
          "properties": {},
          "description": "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureKeyVaultSecret"
          ]
        }
      },
      "required": [
        "store",
        "secretName",
        "type"
      ],
      "description": "Azure Key Vault secret reference."
    },
    "AzureMLBatchExecutionActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMLBatchExecutionActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure ML Batch Execution activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureMLBatchExecution"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure ML Batch Execution activity."
    },
    "AzureMLBatchExecutionActivityTypeProperties": {
      "type": "object",
      "properties": {
        "globalParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request."
        },
        "webServiceOutputs": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/AzureMLWebServiceFile"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request."
        },
        "webServiceInputs": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/AzureMLWebServiceFile"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request."
        }
      },
      "description": "Azure ML Batch Execution activity properties."
    },
    "AzureMLLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMLLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure ML Web Service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureML"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure ML Web Service linked service."
    },
    "AzureMLLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "mlEndpoint": {
          "type": "object",
          "properties": {},
          "description": "The Batch Execution REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string)."
        },
        "apiKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "updateResourceEndpoint": {
          "type": "object",
          "properties": {},
          "description": "The Update Resource REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "mlEndpoint",
        "apiKey"
      ],
      "description": "Azure ML Web Service linked service properties."
    },
    "AzureMLUpdateResourceActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMLUpdateResourceActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure ML Update Resource activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureMLUpdateResource"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure ML Update Resource management activity."
    },
    "AzureMLUpdateResourceActivityTypeProperties": {
      "type": "object",
      "properties": {
        "trainedModelName": {
          "type": "object",
          "properties": {},
          "description": "Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string)."
        },
        "trainedModelLinkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "trainedModelFilePath": {
          "type": "object",
          "properties": {},
          "description": "The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "trainedModelName",
        "trainedModelLinkedServiceName",
        "trainedModelFilePath"
      ],
      "description": "Azure ML Update Resource activity properties."
    },
    "AzureMLWebServiceFile": {
      "type": "object",
      "properties": {
        "filePath": {
          "type": "object",
          "properties": {},
          "description": "The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        }
      },
      "required": [
        "filePath",
        "linkedServiceName"
      ],
      "description": "Azure ML WebService Input/Output file"
    },
    "AzureMySqlLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMySqlLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure MySQL database linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureMySql"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure MySQL database linked service."
    },
    "AzureMySqlLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Azure MySQL database linked service properties."
    },
    "AzureMySqlSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureMySqlSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure MySQL source."
    },
    "AzureMySqlTableDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureMySqlTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure MySQL database dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureMySqlTable"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The Azure MySQL database dataset."
    },
    "AzureMySqlTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The Azure MySQL database table name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure MySQL database dataset properties."
    },
    "AzurePostgreSqlLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzurePostgreSqlLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure PostgreSQL linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzurePostgreSql"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure PostgreSQL linked service."
    },
    "AzurePostgreSqlLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure PostgreSQL linked service properties."
    },
    "AzurePostgreSqlSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzurePostgreSqlSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure PostgreSQL source."
    },
    "AzurePostgreSqlTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzurePostgreSqlTable"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Azure PostgreSQL dataset."
    },
    "AzureQueueSink": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "AzureQueueSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Queue sink."
    },
    "AzureSearchIndexDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSearchIndexDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureSearchIndex"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The Azure Search Index."
    },
    "AzureSearchIndexDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "indexName": {
          "type": "object",
          "properties": {},
          "description": "The name of the Azure Search Index. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "indexName"
      ],
      "description": "Properties specific to this dataset type."
    },
    "AzureSearchIndexSink": {
      "type": "object",
      "properties": {
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "Specify the write behavior when upserting documents into Azure Search Index."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureSearchIndexSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Search Index sink."
    },
    "AzureSearchLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSearchLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Windows Azure Search Service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureSearch"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for Windows Azure Search Service."
    },
    "AzureSearchLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "url": {
          "type": "object",
          "properties": {},
          "description": "URL for Azure Search service. Type: string (or Expression with resultType string)."
        },
        "key": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "Windows Azure Search Service linked service properties."
    },
    "AzureSqlDatabaseLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSqlDatabaseLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure SQL Database linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlDatabase"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Microsoft Azure SQL Database linked service."
    },
    "AzureSqlDatabaseLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Azure SQL Database linked service properties."
    },
    "AzureSqlDWLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSqlDWLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure SQL Data Warehouse linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlDW"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Azure SQL Data Warehouse linked service."
    },
    "AzureSqlDWLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Azure SQL Data Warehouse linked service properties."
    },
    "AzureSqlDWTableDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSqlDWTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure SQL Data Warehouse dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlDWTable"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The Azure SQL Data Warehouse dataset."
    },
    "AzureSqlDWTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ],
      "description": "Azure SQL Data Warehouse dataset properties."
    },
    "AzureSqlTableDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureSqlTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure SQL dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureSqlTable"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The Azure SQL Server database dataset."
    },
    "AzureSqlTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Azure SQL database. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ],
      "description": "Azure SQL dataset properties."
    },
    "AzureStorageLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureStorageLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Storage linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureStorage"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The storage account linked service."
    },
    "AzureStorageLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "sasUri": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Azure Storage linked service properties."
    },
    "AzureTableDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Table dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureTable"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The Azure Table storage dataset."
    },
    "AzureTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Azure Table storage. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ],
      "description": "Azure Table dataset properties."
    },
    "AzureTableSink": {
      "type": "object",
      "properties": {
        "azureTableDefaultPartitionKeyValue": {
          "type": "object",
          "properties": {},
          "description": "Azure Table default partition key value. Type: string (or Expression with resultType string)."
        },
        "azureTablePartitionKeyName": {
          "type": "object",
          "properties": {},
          "description": "Azure Table partition key name. Type: string (or Expression with resultType string)."
        },
        "azureTableRowKeyName": {
          "type": "object",
          "properties": {},
          "description": "Azure Table row key name. Type: string (or Expression with resultType string)."
        },
        "azureTableInsertType": {
          "type": "object",
          "properties": {},
          "description": "Azure Table insert type. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureTableSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Table sink."
    },
    "AzureTableSource": {
      "type": "object",
      "properties": {
        "azureTableSourceQuery": {
          "type": "object",
          "properties": {},
          "description": "Azure Table source query. Type: string (or Expression with resultType string)."
        },
        "azureTableSourceIgnoreTableNotFound": {
          "type": "object",
          "properties": {},
          "description": "Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "AzureTableSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Table source."
    },
    "BlobEventsTrigger": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobEventsTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Blob Events Trigger properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "BlobEventsTrigger"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Trigger that runs every time a Blob event occurs."
    },
    "BlobEventsTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "blobPathBeginsWith": {
          "type": "string",
          "description": "The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith."
        },
        "blobPathEndsWith": {
          "type": "string",
          "description": "The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith."
        },
        "ignoreEmptyBlobs": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "If set to true, blobs with zero bytes will be ignored."
        },
        "events": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Microsoft.Storage.BlobCreated",
                  "Microsoft.Storage.BlobDeleted"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Blob event types."
        },
        "scope": {
          "type": "string",
          "description": "The ARM resource ID of the Storage Account."
        }
      },
      "required": [
        "events",
        "scope"
      ],
      "description": "Blob Events Trigger properties."
    },
    "BlobSink": {
      "type": "object",
      "properties": {
        "blobWriterOverwriteFiles": {
          "type": "object",
          "properties": {},
          "description": "Blob writer overwrite files. Type: boolean (or Expression with resultType boolean)."
        },
        "blobWriterDateTimeFormat": {
          "type": "object",
          "properties": {},
          "description": "Blob writer date time format. Type: string (or Expression with resultType string)."
        },
        "blobWriterAddHeader": {
          "type": "object",
          "properties": {},
          "description": "Blob writer add header. Type: boolean (or Expression with resultType boolean)."
        },
        "copyBehavior": {
          "type": "object",
          "properties": {},
          "description": "The type of copy behavior for copy sink."
        },
        "type": {
          "type": "string",
          "enum": [
            "BlobSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Blob sink."
    },
    "BlobSource": {
      "type": "object",
      "properties": {
        "treatEmptyAsNull": {
          "type": "object",
          "properties": {},
          "description": "Treat empty as null. Type: boolean (or Expression with resultType boolean)."
        },
        "skipHeaderLineCount": {
          "type": "object",
          "properties": {},
          "description": "Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer)."
        },
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "BlobSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Azure Blob source."
    },
    "BlobTrigger": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Blob Trigger properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "BlobTrigger"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Trigger that runs every time the selected Blob container changes."
    },
    "BlobTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "folderPath": {
          "type": "string",
          "description": "The path of the container/folder that will trigger the pipeline."
        },
        "maxConcurrency": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The max number of parallel files to handle when it is triggered."
        },
        "linkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        }
      },
      "required": [
        "folderPath",
        "maxConcurrency",
        "linkedService"
      ],
      "description": "Blob Trigger properties."
    },
    "CassandraLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cassandra linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Cassandra"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for Cassandra data source."
    },
    "CassandraLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "Host name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "AuthenticationType to be used for connection. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The port for the connection. Type: integer (or Expression with resultType integer)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ],
      "description": "Cassandra linked service properties."
    },
    "CassandraSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string)."
        },
        "consistencyLevel": {
          "type": "object",
          "properties": {},
          "description": "The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive."
        },
        "type": {
          "type": "string",
          "enum": [
            "CassandraSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for a Cassandra database."
    },
    "CassandraTableDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cassandra dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "CassandraTable"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The Cassandra database dataset."
    },
    "CassandraTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the Cassandra database. Type: string (or Expression with resultType string)."
        },
        "keyspace": {
          "type": "object",
          "properties": {},
          "description": "The keyspace of the Cassandra database. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Cassandra dataset properties."
    },
    "ConcurLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ConcurLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Concur Service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Concur"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Concur Service linked service."
    },
    "ConcurLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "Application client_id supplied by Concur App Management."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name that you use to access Concur Service."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "clientId",
        "username"
      ],
      "description": "Concur Service linked service properties."
    },
    "ConcurObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ConcurObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Concur Service dataset."
    },
    "ConcurSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ConcurSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Concur Service source."
    },
    "ControlActivity": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ExecutePipelineActivity"
        },
        {
          "$ref": "#/definitions/IfConditionActivity"
        },
        {
          "$ref": "#/definitions/ForEachActivity"
        },
        {
          "$ref": "#/definitions/WaitActivity"
        },
        {
          "$ref": "#/definitions/UntilActivity"
        },
        {
          "$ref": "#/definitions/FilterActivity"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Container"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Base class for all control activities like IfCondition, ForEach , Until."
    },
    "CopyActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CopyActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Copy activity properties."
        },
        "inputs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatasetReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of inputs for the activity."
        },
        "outputs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatasetReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of outputs for the activity."
        },
        "type": {
          "type": "string",
          "enum": [
            "Copy"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Copy activity."
    },
    "CopyActivityTypeProperties": {
      "type": "object",
      "properties": {
        "source": {
          "oneOf": [
            {
              "$ref": "#/definitions/CopySource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A copy activity source."
        },
        "sink": {
          "oneOf": [
            {
              "$ref": "#/definitions/CopySink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A copy activity sink."
        },
        "translator": {
          "type": "object",
          "properties": {},
          "description": "Copy activity translator. If not specified, tabular translator is used."
        },
        "enableStaging": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "stagingSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StagingSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Staging settings."
        },
        "parallelCopies": {
          "type": "object",
          "properties": {},
          "description": "Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "cloudDataMovementUnits": {
          "type": "object",
          "properties": {},
          "description": "Maximum number of cloud data movement units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "enableSkipIncompatibleRow": {
          "type": "object",
          "properties": {},
          "description": "Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "redirectIncompatibleRowSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/RedirectIncompatibleRowSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Redirect incompatible row settings"
        }
      },
      "required": [
        "source",
        "sink"
      ],
      "description": "Copy activity properties."
    },
    "CopySink": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/SapCloudForCustomerSink"
        },
        {
          "$ref": "#/definitions/AzureQueueSink"
        },
        {
          "$ref": "#/definitions/AzureTableSink"
        },
        {
          "$ref": "#/definitions/BlobSink"
        },
        {
          "$ref": "#/definitions/FileSystemSink"
        },
        {
          "$ref": "#/definitions/DocumentDbCollectionSink"
        },
        {
          "$ref": "#/definitions/SqlSink"
        },
        {
          "$ref": "#/definitions/SqlDWSink"
        },
        {
          "$ref": "#/definitions/OracleSink"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreSink"
        },
        {
          "$ref": "#/definitions/AzureSearchIndexSink"
        },
        {
          "$ref": "#/definitions/OdbcSink"
        },
        {
          "$ref": "#/definitions/DynamicsSink"
        },
        {
          "$ref": "#/definitions/SalesforceSink"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "writeBatchSize": {
          "type": "object",
          "properties": {},
          "description": "Write batch size. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "writeBatchTimeout": {
          "type": "object",
          "properties": {},
          "description": "Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "sinkRetryCount": {
          "type": "object",
          "properties": {},
          "description": "Sink retry count. Type: integer (or Expression with resultType integer)."
        },
        "sinkRetryWait": {
          "type": "object",
          "properties": {},
          "description": "Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "description": "A copy activity sink."
    },
    "CopySource": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AzureTableSource"
        },
        {
          "$ref": "#/definitions/BlobSource"
        },
        {
          "$ref": "#/definitions/DocumentDbCollectionSource"
        },
        {
          "$ref": "#/definitions/DynamicsSource"
        },
        {
          "$ref": "#/definitions/RelationalSource"
        },
        {
          "$ref": "#/definitions/SalesforceSource"
        },
        {
          "$ref": "#/definitions/SapCloudForCustomerSource"
        },
        {
          "$ref": "#/definitions/SapEccSource"
        },
        {
          "$ref": "#/definitions/SqlSource"
        },
        {
          "$ref": "#/definitions/SqlDWSource"
        },
        {
          "$ref": "#/definitions/FileSystemSource"
        },
        {
          "$ref": "#/definitions/HdfsSource"
        },
        {
          "$ref": "#/definitions/AzureMySqlSource"
        },
        {
          "$ref": "#/definitions/OracleSource"
        },
        {
          "$ref": "#/definitions/WebSource"
        },
        {
          "$ref": "#/definitions/CassandraSource"
        },
        {
          "$ref": "#/definitions/MongoDbSource"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreSource"
        },
        {
          "$ref": "#/definitions/HttpSource"
        },
        {
          "$ref": "#/definitions/AmazonMWSSource"
        },
        {
          "$ref": "#/definitions/AzurePostgreSqlSource"
        },
        {
          "$ref": "#/definitions/ConcurSource"
        },
        {
          "$ref": "#/definitions/CouchbaseSource"
        },
        {
          "$ref": "#/definitions/DrillSource"
        },
        {
          "$ref": "#/definitions/EloquaSource"
        },
        {
          "$ref": "#/definitions/GoogleBigQuerySource"
        },
        {
          "$ref": "#/definitions/GreenplumSource"
        },
        {
          "$ref": "#/definitions/HBaseSource"
        },
        {
          "$ref": "#/definitions/HiveSource"
        },
        {
          "$ref": "#/definitions/HubspotSource"
        },
        {
          "$ref": "#/definitions/ImpalaSource"
        },
        {
          "$ref": "#/definitions/JiraSource"
        },
        {
          "$ref": "#/definitions/MagentoSource"
        },
        {
          "$ref": "#/definitions/MariaDBSource"
        },
        {
          "$ref": "#/definitions/MarketoSource"
        },
        {
          "$ref": "#/definitions/PaypalSource"
        },
        {
          "$ref": "#/definitions/PhoenixSource"
        },
        {
          "$ref": "#/definitions/PrestoSource"
        },
        {
          "$ref": "#/definitions/QuickBooksSource"
        },
        {
          "$ref": "#/definitions/ServiceNowSource"
        },
        {
          "$ref": "#/definitions/ShopifySource"
        },
        {
          "$ref": "#/definitions/SparkSource"
        },
        {
          "$ref": "#/definitions/SquareSource"
        },
        {
          "$ref": "#/definitions/XeroSource"
        },
        {
          "$ref": "#/definitions/ZohoSource"
        },
        {
          "$ref": "#/definitions/NetezzaSource"
        },
        {
          "$ref": "#/definitions/VerticaSource"
        },
        {
          "$ref": "#/definitions/SalesforceMarketingCloudSource"
        },
        {
          "$ref": "#/definitions/ResponsysSource"
        },
        {
          "$ref": "#/definitions/AmazonRedshiftSource"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "sourceRetryCount": {
          "type": "object",
          "properties": {},
          "description": "Source retry count. Type: integer (or Expression with resultType integer)."
        },
        "sourceRetryWait": {
          "type": "object",
          "properties": {},
          "description": "Source retry wait. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "description": "A copy activity source."
    },
    "CosmosDbLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CosmosDbLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "CosmosDB linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "CosmosDb"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Microsoft Azure Cosmos Database (CosmosDB) linked service."
    },
    "CosmosDbLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "CosmosDB linked service properties."
    },
    "CouchbaseLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CouchbaseLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Couchbase server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Couchbase"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Couchbase server linked service."
    },
    "CouchbaseLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Couchbase server linked service properties."
    },
    "CouchbaseSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "CouchbaseSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Couchbase server source."
    },
    "CouchbaseTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CouchbaseTable"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Couchbase server dataset."
    },
    "CustomActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CustomActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Custom activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Custom"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Custom activity type."
    },
    "CustomActivityReferenceObject": {
      "type": "object",
      "properties": {
        "linkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service references."
        },
        "datasets": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatasetReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset references."
        }
      },
      "description": "Reference objects for custom activity"
    },
    "CustomActivityTypeProperties": {
      "type": "object",
      "properties": {
        "command": {
          "type": "object",
          "properties": {},
          "description": "Command for custom activity Type: string (or Expression with resultType string)."
        },
        "resourceLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "Folder path for resource files Type: string (or Expression with resultType string)."
        },
        "referenceObjects": {
          "oneOf": [
            {
              "$ref": "#/definitions/CustomActivityReferenceObject"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Reference objects for custom activity"
        },
        "extendedProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined."
        }
      },
      "required": [
        "command"
      ],
      "description": "Custom activity properties."
    },
    "CustomDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "type": "object",
          "properties": {},
          "description": "Custom dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "CustomDataset"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The custom dataset."
    },
    "CustomDataSourceLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "type": "object",
          "properties": {},
          "description": "Custom linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "CustomDataSource"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Custom linked service."
    },
    "DatabricksNotebookActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatabricksNotebookActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Databricks Notebook activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "DatabricksNotebook"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "DatabricksNotebook activity."
    },
    "DatabricksNotebookActivityTypeProperties": {
      "type": "object",
      "properties": {
        "notebookPath": {
          "type": "object",
          "properties": {},
          "description": "The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string)."
        },
        "baseParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used."
        }
      },
      "required": [
        "notebookPath"
      ],
      "description": "Databricks Notebook activity properties."
    },
    "DataLakeAnalyticsUSQLActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataLakeAnalyticsUSQLActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "DataLakeAnalyticsU-SQL activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "DataLakeAnalyticsU-SQL"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Data Lake Analytics U-SQL activity."
    },
    "DataLakeAnalyticsUSQLActivityTypeProperties": {
      "type": "object",
      "properties": {
        "scriptPath": {
          "type": "object",
          "properties": {},
          "description": "Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string)."
        },
        "scriptLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "degreeOfParallelism": {
          "type": "object",
          "properties": {},
          "description": "The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1."
        },
        "priority": {
          "type": "object",
          "properties": {},
          "description": "Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Parameters for U-SQL job request."
        },
        "runtimeVersion": {
          "type": "object",
          "properties": {},
          "description": "Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string)."
        },
        "compilationMode": {
          "type": "object",
          "properties": {},
          "description": "Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "scriptPath",
        "scriptLinkedService"
      ],
      "description": "DataLakeAnalyticsU-SQL activity properties."
    },
    "Dataset": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AmazonS3Dataset"
        },
        {
          "$ref": "#/definitions/AzureBlobDataset"
        },
        {
          "$ref": "#/definitions/AzureTableDataset"
        },
        {
          "$ref": "#/definitions/AzureSqlTableDataset"
        },
        {
          "$ref": "#/definitions/AzureSqlDWTableDataset"
        },
        {
          "$ref": "#/definitions/CassandraTableDataset"
        },
        {
          "$ref": "#/definitions/CustomDataset"
        },
        {
          "$ref": "#/definitions/DocumentDbCollectionDataset"
        },
        {
          "$ref": "#/definitions/DynamicsEntityDataset"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreDataset"
        },
        {
          "$ref": "#/definitions/FileShareDataset"
        },
        {
          "$ref": "#/definitions/MongoDbCollectionDataset"
        },
        {
          "$ref": "#/definitions/ODataResourceDataset"
        },
        {
          "$ref": "#/definitions/OracleTableDataset"
        },
        {
          "$ref": "#/definitions/AzureMySqlTableDataset"
        },
        {
          "$ref": "#/definitions/RelationalTableDataset"
        },
        {
          "$ref": "#/definitions/SalesforceObjectDataset"
        },
        {
          "$ref": "#/definitions/SapCloudForCustomerResourceDataset"
        },
        {
          "$ref": "#/definitions/SapEccResourceDataset"
        },
        {
          "$ref": "#/definitions/SqlServerTableDataset"
        },
        {
          "$ref": "#/definitions/WebTableDataset"
        },
        {
          "$ref": "#/definitions/AzureSearchIndexDataset"
        },
        {
          "$ref": "#/definitions/HttpDataset"
        },
        {
          "$ref": "#/definitions/AmazonMWSObjectDataset"
        },
        {
          "$ref": "#/definitions/AzurePostgreSqlTableDataset"
        },
        {
          "$ref": "#/definitions/ConcurObjectDataset"
        },
        {
          "$ref": "#/definitions/CouchbaseTableDataset"
        },
        {
          "$ref": "#/definitions/DrillTableDataset"
        },
        {
          "$ref": "#/definitions/EloquaObjectDataset"
        },
        {
          "$ref": "#/definitions/GoogleBigQueryObjectDataset"
        },
        {
          "$ref": "#/definitions/GreenplumTableDataset"
        },
        {
          "$ref": "#/definitions/HBaseObjectDataset"
        },
        {
          "$ref": "#/definitions/HiveObjectDataset"
        },
        {
          "$ref": "#/definitions/HubspotObjectDataset"
        },
        {
          "$ref": "#/definitions/ImpalaObjectDataset"
        },
        {
          "$ref": "#/definitions/JiraObjectDataset"
        },
        {
          "$ref": "#/definitions/MagentoObjectDataset"
        },
        {
          "$ref": "#/definitions/MariaDBTableDataset"
        },
        {
          "$ref": "#/definitions/MarketoObjectDataset"
        },
        {
          "$ref": "#/definitions/PaypalObjectDataset"
        },
        {
          "$ref": "#/definitions/PhoenixObjectDataset"
        },
        {
          "$ref": "#/definitions/PrestoObjectDataset"
        },
        {
          "$ref": "#/definitions/QuickBooksObjectDataset"
        },
        {
          "$ref": "#/definitions/ServiceNowObjectDataset"
        },
        {
          "$ref": "#/definitions/ShopifyObjectDataset"
        },
        {
          "$ref": "#/definitions/SparkObjectDataset"
        },
        {
          "$ref": "#/definitions/SquareObjectDataset"
        },
        {
          "$ref": "#/definitions/XeroObjectDataset"
        },
        {
          "$ref": "#/definitions/ZohoObjectDataset"
        },
        {
          "$ref": "#/definitions/NetezzaTableDataset"
        },
        {
          "$ref": "#/definitions/VerticaTableDataset"
        },
        {
          "$ref": "#/definitions/SalesforceMarketingCloudObjectDataset"
        },
        {
          "$ref": "#/definitions/ResponsysObjectDataset"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "description": {
          "type": "string",
          "description": "Dataset description."
        },
        "structure": {
          "type": "object",
          "properties": {},
          "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ParameterSpecification"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of all parameters for an entity."
        },
        "annotations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of tags that can be used for describing the Dataset."
        }
      },
      "required": [
        "linkedServiceName"
      ],
      "description": "The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents."
    },
    "DatasetBZip2Compression": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "BZip2"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The BZip2 compression method used on a dataset."
    },
    "DatasetCompression": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/DatasetBZip2Compression"
        },
        {
          "$ref": "#/definitions/DatasetGZipCompression"
        },
        {
          "$ref": "#/definitions/DatasetDeflateCompression"
        },
        {
          "$ref": "#/definitions/DatasetZipDeflateCompression"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        }
      },
      "description": "The compression method used on a dataset."
    },
    "DatasetDeflateCompression": {
      "type": "object",
      "properties": {
        "level": {
          "type": "object",
          "properties": {},
          "description": "The Deflate compression level."
        },
        "type": {
          "type": "string",
          "enum": [
            "Deflate"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The Deflate compression method used on a dataset."
    },
    "DatasetGZipCompression": {
      "type": "object",
      "properties": {
        "level": {
          "type": "object",
          "properties": {},
          "description": "The GZip compression level."
        },
        "type": {
          "type": "string",
          "enum": [
            "GZip"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The GZip compression method used on a dataset."
    },
    "DatasetReference": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "DatasetReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "referenceName": {
          "type": "string",
          "description": "Reference dataset name."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        }
      },
      "required": [
        "type",
        "referenceName"
      ],
      "description": "Dataset reference type."
    },
    "DatasetStorageFormat": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/TextFormat"
        },
        {
          "$ref": "#/definitions/JsonFormat"
        },
        {
          "$ref": "#/definitions/AvroFormat"
        },
        {
          "$ref": "#/definitions/OrcFormat"
        },
        {
          "$ref": "#/definitions/ParquetFormat"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "serializer": {
          "type": "object",
          "properties": {},
          "description": "Serializer. Type: string (or Expression with resultType string)."
        },
        "deserializer": {
          "type": "object",
          "properties": {},
          "description": "Deserializer. Type: string (or Expression with resultType string)."
        }
      },
      "description": "The format definition of a storage."
    },
    "DatasetZipDeflateCompression": {
      "type": "object",
      "properties": {
        "level": {
          "type": "object",
          "properties": {},
          "description": "The ZipDeflate compression level."
        },
        "type": {
          "type": "string",
          "enum": [
            "ZipDeflate"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The ZipDeflate compression method used on a dataset."
    },
    "Db2LinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Db2LinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "DB2 linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Db2"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for DB2 data source."
    },
    "Db2LinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "server": {
          "type": "object",
          "properties": {},
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "database": {
          "type": "object",
          "properties": {},
          "description": "Database name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AuthenticationType to be used for connection."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ],
      "description": "DB2 linked service properties."
    },
    "DistcpSettings": {
      "type": "object",
      "properties": {
        "resourceManagerEndpoint": {
          "type": "object",
          "properties": {},
          "description": "Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string)."
        },
        "tempScriptPath": {
          "type": "object",
          "properties": {},
          "description": "Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string)."
        },
        "distcpOptions": {
          "type": "object",
          "properties": {},
          "description": "Specifies the Distcp options. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "resourceManagerEndpoint",
        "tempScriptPath"
      ],
      "description": "Distcp settings."
    },
    "DocumentDbCollectionDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DocumentDbCollectionDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "DocumentDB Collection dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "DocumentDbCollection"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Microsoft Azure Document Database Collection dataset."
    },
    "DocumentDbCollectionDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "collectionName": {
          "type": "object",
          "properties": {},
          "description": "Document Database collection name. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "collectionName"
      ],
      "description": "DocumentDB Collection dataset properties."
    },
    "DocumentDbCollectionSink": {
      "type": "object",
      "properties": {
        "nestingSeparator": {
          "type": "object",
          "properties": {},
          "description": "Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DocumentDbCollectionSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Document Database Collection sink."
    },
    "DocumentDbCollectionSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Documents query. Type: string (or Expression with resultType string)."
        },
        "nestingSeparator": {
          "type": "object",
          "properties": {},
          "description": "Nested properties separator. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DocumentDbCollectionSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Document Database Collection source."
    },
    "DrillLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DrillLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Drill server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Drill"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Drill server linked service."
    },
    "DrillLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Drill server linked service properties."
    },
    "DrillSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DrillSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Drill server source."
    },
    "DrillTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DrillTable"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Drill server dataset."
    },
    "DynamicsEntityDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DynamicsEntityDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dynamics entity dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "DynamicsEntity"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The Dynamics entity dataset."
    },
    "DynamicsEntityDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "object",
          "properties": {},
          "description": "The logical name of the entity. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Dynamics entity dataset properties."
    },
    "DynamicsLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DynamicsLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dynamics linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Dynamics"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Dynamics linked service."
    },
    "DynamicsLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "deploymentType": {
          "type": "object",
          "properties": {},
          "description": "The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string)."
        },
        "hostName": {
          "type": "object",
          "properties": {},
          "description": "The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "serviceUri": {
          "type": "object",
          "properties": {},
          "description": "The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string)."
        },
        "organizationName": {
          "type": "object",
          "properties": {},
          "description": "The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "User name to access the Dynamics instance. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "deploymentType",
        "authenticationType",
        "username"
      ],
      "description": "Dynamics linked service properties."
    },
    "DynamicsSink": {
      "type": "object",
      "properties": {
        "writeBehavior": {
          "oneOf": [
            {
              "type": "object",
              "enum": [
                "Upsert"
              ],
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The write behavior for the operation."
        },
        "ignoreNullValues": {
          "type": "object",
          "properties": {},
          "description": "The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DynamicsSink"
          ]
        }
      },
      "required": [
        "writeBehavior",
        "type"
      ],
      "description": "A copy activity Dynamics sink."
    },
    "DynamicsSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "DynamicsSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Dynamics source."
    },
    "EloquaLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EloquaLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Eloqua server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Eloqua"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Eloqua server linked service."
    },
    "EloquaLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Eloqua server. (i.e. eloqua.example.com)"
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)"
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "endpoint",
        "username"
      ],
      "description": "Eloqua server linked service properties."
    },
    "EloquaObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "EloquaObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Eloqua server dataset."
    },
    "EloquaSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "EloquaSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Eloqua server source."
    },
    "EntityReference": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "IntegrationRuntimeReference",
                "LinkedServiceReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of this referenced entity."
        },
        "referenceName": {
          "type": "string",
          "description": "The name of this referenced entity."
        }
      },
      "description": "The entity reference."
    },
    "ExecutePipelineActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExecutePipelineActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execute pipeline activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "ExecutePipeline"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Execute pipeline activity."
    },
    "ExecutePipelineActivityTypeProperties": {
      "type": "object",
      "properties": {
        "pipeline": {
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline reference type."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        },
        "waitOnCompletion": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false."
        }
      },
      "required": [
        "pipeline"
      ],
      "description": "Execute pipeline activity properties."
    },
    "ExecuteSSISPackageActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExecuteSSISPackageActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execute SSIS package activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "ExecuteSSISPackage"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Execute SSIS package activity."
    },
    "ExecuteSSISPackageActivityTypeProperties": {
      "type": "object",
      "properties": {
        "packageLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISPackageLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS package location."
        },
        "runtime": {
          "type": "object",
          "properties": {},
          "description": "Specifies the runtime to execute SSIS package. The value should be \"x86\" or \"x64\". Type: string (or Expression with resultType string)."
        },
        "loggingLevel": {
          "type": "object",
          "properties": {},
          "description": "The logging level of SSIS package execution. Type: string (or Expression with resultType string)."
        },
        "environmentPath": {
          "type": "object",
          "properties": {},
          "description": "The environment path to execute the SSIS package. Type: string (or Expression with resultType string)."
        },
        "executionCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISExecutionCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS package execution credential."
        },
        "connectVia": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Integration runtime reference type."
        },
        "projectParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/SSISExecutionParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The project level parameters to execute the SSIS package."
        },
        "packageParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/SSISExecutionParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The package level parameters to execute the SSIS package."
        },
        "projectConnectionManagers": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/SSISExecutionParameter"
                },
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The project level connection managers to execute the SSIS package."
        },
        "packageConnectionManagers": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/SSISExecutionParameter"
                },
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The package level connection managers to execute the SSIS package."
        },
        "propertyOverrides": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/SSISPropertyOverride"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The property overrides to execute the SSIS package."
        },
        "logLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISLogLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS package execution log location"
        }
      },
      "required": [
        "packageLocation",
        "connectVia"
      ],
      "description": "Execute SSIS package activity properties."
    },
    "ExecutionActivity": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/CopyActivity"
        },
        {
          "$ref": "#/definitions/HDInsightHiveActivity"
        },
        {
          "$ref": "#/definitions/HDInsightPigActivity"
        },
        {
          "$ref": "#/definitions/HDInsightMapReduceActivity"
        },
        {
          "$ref": "#/definitions/HDInsightStreamingActivity"
        },
        {
          "$ref": "#/definitions/HDInsightSparkActivity"
        },
        {
          "$ref": "#/definitions/ExecuteSSISPackageActivity"
        },
        {
          "$ref": "#/definitions/CustomActivity"
        },
        {
          "$ref": "#/definitions/SqlServerStoredProcedureActivity"
        },
        {
          "$ref": "#/definitions/LookupActivity"
        },
        {
          "$ref": "#/definitions/WebActivity"
        },
        {
          "$ref": "#/definitions/GetMetadataActivity"
        },
        {
          "$ref": "#/definitions/AzureMLBatchExecutionActivity"
        },
        {
          "$ref": "#/definitions/AzureMLUpdateResourceActivity"
        },
        {
          "$ref": "#/definitions/DataLakeAnalyticsUSQLActivity"
        },
        {
          "$ref": "#/definitions/DatabricksNotebookActivity"
        }
      ],
      "properties": {
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "policy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ActivityPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execution policy for an activity."
        },
        "type": {
          "type": "string",
          "enum": [
            "Execution"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Base class for all execution activities."
    },
    "Expression": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Expression"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Expression type."
        },
        "value": {
          "type": "string",
          "description": "Expression value."
        }
      },
      "required": [
        "type",
        "value"
      ],
      "description": "Azure Data Factory expression definition."
    },
    "factories_datasets_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The dataset name."
        },
        "type": {
          "type": "string",
          "enum": [
            "datasets"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Dataset"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories/datasets"
    },
    "factories_integrationRuntimes_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The integration runtime name."
        },
        "type": {
          "type": "string",
          "enum": [
            "integrationRuntimes"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntime"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory nested object which serves as a compute resource for activities."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories/integrationRuntimes"
    },
    "factories_linkedservices_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The linked service name."
        },
        "type": {
          "type": "string",
          "enum": [
            "linkedservices"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories/linkedservices"
    },
    "factories_pipelines_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The pipeline name."
        },
        "type": {
          "type": "string",
          "enum": [
            "pipelines"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Pipeline"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A data factory pipeline."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories/pipelines"
    },
    "factories_triggers_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The trigger name."
        },
        "type": {
          "type": "string",
          "enum": [
            "triggers"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-09-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Trigger"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure data factory nested object which contains information about creating pipeline run"
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.DataFactory/factories/triggers"
    },
    "FactoryIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity type. Currently the only supported type is 'SystemAssigned'."
        }
      },
      "required": [
        "type"
      ],
      "description": "Identity properties of the factory resource."
    },
    "FactoryProperties": {
      "type": "object",
      "properties": {
        "vstsConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/FactoryVSTSConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Factory's VSTS repo information."
        }
      },
      "description": "Factory resource properties."
    },
    "FactoryVSTSConfiguration": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "VSTS account name."
        },
        "projectName": {
          "type": "string",
          "description": "VSTS project name."
        },
        "repositoryName": {
          "type": "string",
          "description": "VSTS repository name."
        },
        "collaborationBranch": {
          "type": "string",
          "description": "VSTS collaboration branch."
        },
        "rootFolder": {
          "type": "string",
          "description": "VSTS root folder."
        },
        "lastCommitId": {
          "type": "string",
          "description": "VSTS last commit id."
        },
        "tenantId": {
          "type": "string",
          "description": "VSTS tenant id."
        }
      },
      "description": "Factory's VSTS repo information."
    },
    "FileServerLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileServerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "File system linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "FileServer"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "File system linked service."
    },
    "FileServerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "Host name of the server. Type: string (or Expression with resultType string)."
        },
        "userId": {
          "type": "object",
          "properties": {},
          "description": "User ID to logon the server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ],
      "description": "File system linked service properties."
    },
    "FileShareDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "On-premises file system dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "FileShare"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "An on-premises file system dataset."
    },
    "FileShareDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "folderPath": {
          "type": "object",
          "properties": {},
          "description": "The path of the on-premises file system. Type: string (or Expression with resultType string)."
        },
        "fileName": {
          "type": "object",
          "properties": {},
          "description": "The name of the on-premises file system. Type: string (or Expression with resultType string)."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        },
        "fileFilter": {
          "type": "object",
          "properties": {},
          "description": "Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string)."
        },
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        }
      },
      "description": "On-premises file system dataset properties."
    },
    "FileSystemSink": {
      "type": "object",
      "properties": {
        "copyBehavior": {
          "type": "object",
          "properties": {},
          "description": "The type of copy behavior for copy sink."
        },
        "type": {
          "type": "string",
          "enum": [
            "FileSystemSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity file system sink."
    },
    "FileSystemSource": {
      "type": "object",
      "properties": {
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "FileSystemSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity file system source."
    },
    "FilterActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FilterActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Filter activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Filter"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Filter and return results from input array based on the conditions."
    },
    "FilterActivityTypeProperties": {
      "type": "object",
      "properties": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        },
        "condition": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        }
      },
      "required": [
        "items",
        "condition"
      ],
      "description": "Filter activity properties."
    },
    "ForEachActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ForEachActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ForEach activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "ForEach"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "This activity is used for iterating over a collection and execute given activities."
    },
    "ForEachActivityTypeProperties": {
      "type": "object",
      "properties": {
        "isSequential": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Should the loop be executed in sequence or in parallel (max 50)"
        },
        "batchCount": {
          "oneOf": [
            {
              "type": "integer",
              "maximum": 50
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Batch count to be used for controlling the number of parallel execution (when isSequential is set to false)."
        },
        "items": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        },
        "activities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities to execute ."
        }
      },
      "required": [
        "items",
        "activities"
      ],
      "description": "ForEach activity properties."
    },
    "FtpServerLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FtpServerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        },
        "type": {
          "type": "string",
          "enum": [
            "FtpServer"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "A FTP server Linked Service."
    },
    "FtpServerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "Host name of the FTP server. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Anonymous"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to be used to connect to the FTP server."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "Username to logon the FTP server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "enableServerCertificateValidation": {
          "type": "object",
          "properties": {},
          "description": "If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "host"
      ],
      "description": "Properties specific to this linked service type."
    },
    "GetMetadataActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GetMetadataActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "GetMetadata activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "GetMetadata"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Activity to get metadata of dataset"
    },
    "GetMetadataActivityTypeProperties": {
      "type": "object",
      "properties": {
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "fieldList": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Fields of metadata to get from dataset."
        }
      },
      "required": [
        "dataset"
      ],
      "description": "GetMetadata activity properties."
    },
    "GoogleBigQueryLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GoogleBigQueryLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Google BigQuery service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "GoogleBigQuery"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Google BigQuery service linked service."
    },
    "GoogleBigQueryLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "project": {
          "type": "object",
          "properties": {},
          "description": "The default BigQuery project to query against."
        },
        "additionalProjects": {
          "type": "object",
          "properties": {},
          "description": "A comma-separated list of public BigQuery projects to access."
        },
        "requestGoogleDriveScope": {
          "type": "object",
          "properties": {},
          "description": "Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ServiceAuthentication",
                "UserAuthentication"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR."
        },
        "refreshToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "clientId": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "email": {
          "type": "object",
          "properties": {},
          "description": "The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR."
        },
        "keyFilePath": {
          "type": "object",
          "properties": {},
          "description": "The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "project",
        "authenticationType"
      ],
      "description": "Google BigQuery service linked service properties."
    },
    "GoogleBigQueryObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GoogleBigQueryObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Google BigQuery service dataset."
    },
    "GoogleBigQuerySource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "GoogleBigQuerySource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Google BigQuery service source."
    },
    "GreenplumLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GreenplumLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Greenplum Database linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Greenplum"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Greenplum Database linked service."
    },
    "GreenplumLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Greenplum Database linked service properties."
    },
    "GreenplumSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "GreenplumSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Greenplum Database source."
    },
    "GreenplumTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GreenplumTable"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Greenplum Database dataset."
    },
    "HBaseLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HBaseLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HBase server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "HBase"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "HBase server linked service."
    },
    "HBaseLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The IP address or host name of the HBase server. (i.e. 192.168.222.160)"
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the HBase instance uses to listen for client connections. The default value is 9090."
        },
        "httpPath": {
          "type": "object",
          "properties": {},
          "description": "The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)"
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "Basic"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication mechanism to use to connect to the HBase server."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name used to connect to the HBase instance."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host",
        "authenticationType"
      ],
      "description": "HBase server linked service properties."
    },
    "HBaseObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HBaseObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "HBase server dataset."
    },
    "HBaseSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "HBaseSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity HBase server source."
    },
    "HdfsLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HdfsLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDFS linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Hdfs"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Hadoop Distributed File System (HDFS) linked service."
    },
    "HdfsLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "url": {
          "type": "object",
          "properties": {},
          "description": "The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "User name for Windows authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        }
      },
      "required": [
        "url"
      ],
      "description": "HDFS linked service properties."
    },
    "HdfsSource": {
      "type": "object",
      "properties": {
        "recursive": {
          "type": "object",
          "properties": {},
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "distcpSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/DistcpSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Distcp settings."
        },
        "type": {
          "type": "string",
          "enum": [
            "HdfsSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity HDFS source."
    },
    "HDInsightHiveActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightHiveActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight Hive activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "HDInsightHive"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "HDInsight Hive activity type."
    },
    "HDInsightHiveActivityTypeProperties": {
      "type": "object",
      "properties": {
        "storageLinkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage linked service references."
        },
        "arguments": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User specified arguments to HDInsightActivity."
        },
        "getDebugInfo": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Always",
                "Failure"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Debug info option."
        },
        "scriptPath": {
          "type": "object",
          "properties": {},
          "description": "Script path. Type: string (or Expression with resultType string)."
        },
        "scriptLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "defines": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows user to specify defines for Hive job request."
        }
      },
      "description": "HDInsight Hive activity properties."
    },
    "HDInsightLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "HDInsight"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "HDInsight linked service."
    },
    "HDInsightLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clusterUri": {
          "type": "object",
          "properties": {},
          "description": "HDInsight cluster URI. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "HDInsight cluster user name. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "hcatalogLinkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "clusterUri"
      ],
      "description": "HDInsight linked service properties."
    },
    "HDInsightMapReduceActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightMapReduceActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight MapReduce activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "HDInsightMapReduce"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "HDInsight MapReduce activity type."
    },
    "HDInsightMapReduceActivityTypeProperties": {
      "type": "object",
      "properties": {
        "storageLinkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage linked service references."
        },
        "arguments": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User specified arguments to HDInsightActivity."
        },
        "getDebugInfo": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Always",
                "Failure"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Debug info option."
        },
        "className": {
          "type": "object",
          "properties": {},
          "description": "Class name. Type: string (or Expression with resultType string)."
        },
        "jarFilePath": {
          "type": "object",
          "properties": {},
          "description": "Jar path. Type: string (or Expression with resultType string)."
        },
        "jarLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "jarLibs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Jar libs."
        },
        "defines": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows user to specify defines for the MapReduce job request."
        }
      },
      "required": [
        "className",
        "jarFilePath"
      ],
      "description": "HDInsight MapReduce activity properties."
    },
    "HDInsightOnDemandLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightOnDemandLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight ondemand linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "HDInsightOnDemand"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "HDInsight ondemand linked service."
    },
    "HDInsightOnDemandLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clusterSize": {
          "type": "object",
          "properties": {},
          "description": "Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string)."
        },
        "timeToLive": {
          "type": "object",
          "properties": {},
          "description": "The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string)."
        },
        "version": {
          "type": "object",
          "properties": {},
          "description": "Version of the HDInsight cluster.  Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "hostSubscriptionId": {
          "type": "object",
          "properties": {},
          "description": "The customer’s subscription to host the cluster. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "properties": {},
          "description": "The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "tenant": {
          "type": "object",
          "properties": {},
          "description": "The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "clusterResourceGroup": {
          "type": "object",
          "properties": {},
          "description": "The resource group where the cluster belongs. Type: string (or Expression with resultType string)."
        },
        "clusterNamePrefix": {
          "type": "object",
          "properties": {},
          "description": "The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string)."
        },
        "clusterUserName": {
          "type": "object",
          "properties": {},
          "description": "The username to access the cluster. Type: string (or Expression with resultType string)."
        },
        "clusterPassword": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "clusterSshUserName": {
          "type": "object",
          "properties": {},
          "description": "The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string)."
        },
        "clusterSshPassword": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "additionalLinkedServiceNames": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf."
        },
        "hcatalogLinkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "clusterType": {
          "type": "object",
          "properties": {},
          "description": "The cluster type. Type: string (or Expression with resultType string)."
        },
        "sparkVersion": {
          "type": "object",
          "properties": {},
          "description": "The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string)."
        },
        "coreConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created."
        },
        "hBaseConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster."
        },
        "hdfsConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster."
        },
        "hiveConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster."
        },
        "mapReduceConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster."
        },
        "oozieConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster."
        },
        "stormConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster."
        },
        "yarnConfiguration": {
          "type": "object",
          "properties": {},
          "description": "Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "headNodeSize": {
          "type": "object",
          "properties": {},
          "description": "Specifies the size of the head node for the HDInsight cluster."
        },
        "dataNodeSize": {
          "type": "object",
          "properties": {},
          "description": "Specifies the size of the data node for the HDInsight cluster."
        },
        "zookeeperNodeSize": {
          "type": "object",
          "properties": {},
          "description": "Specifies the size of the Zoo Keeper node for the HDInsight cluster."
        }
      },
      "required": [
        "clusterSize",
        "timeToLive",
        "version",
        "linkedServiceName",
        "hostSubscriptionId",
        "tenant",
        "clusterResourceGroup"
      ],
      "description": "HDInsight ondemand linked service properties."
    },
    "HDInsightPigActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightPigActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight Pig activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "HDInsightPig"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "HDInsight Pig activity type."
    },
    "HDInsightPigActivityTypeProperties": {
      "type": "object",
      "properties": {
        "storageLinkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage linked service references."
        },
        "arguments": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User specified arguments to HDInsightActivity."
        },
        "getDebugInfo": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Always",
                "Failure"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Debug info option."
        },
        "scriptPath": {
          "type": "object",
          "properties": {},
          "description": "Script path. Type: string (or Expression with resultType string)."
        },
        "scriptLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "defines": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows user to specify defines for Pig job request."
        }
      },
      "description": "HDInsight Pig activity properties."
    },
    "HDInsightSparkActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightSparkActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight spark activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "HDInsightSpark"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "HDInsight Spark activity."
    },
    "HDInsightSparkActivityTypeProperties": {
      "type": "object",
      "properties": {
        "rootPath": {
          "type": "object",
          "properties": {},
          "description": "The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string)."
        },
        "entryFilePath": {
          "type": "object",
          "properties": {},
          "description": "The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string)."
        },
        "arguments": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The user-specified arguments to HDInsightSparkActivity."
        },
        "getDebugInfo": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Always",
                "Failure"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Debug info option."
        },
        "sparkJobLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "className": {
          "type": "string",
          "description": "The application's Java/Spark main class."
        },
        "proxyUser": {
          "type": "object",
          "properties": {},
          "description": "The user to impersonate that will execute the job. Type: string (or Expression with resultType string)."
        },
        "sparkConfig": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Spark configuration property."
        }
      },
      "required": [
        "rootPath",
        "entryFilePath"
      ],
      "description": "HDInsight spark activity properties."
    },
    "HDInsightStreamingActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightStreamingActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HDInsight streaming activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "HDInsightStreaming"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "HDInsight streaming activity type."
    },
    "HDInsightStreamingActivityTypeProperties": {
      "type": "object",
      "properties": {
        "storageLinkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage linked service references."
        },
        "arguments": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User specified arguments to HDInsightActivity."
        },
        "getDebugInfo": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Always",
                "Failure"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Debug info option."
        },
        "mapper": {
          "type": "object",
          "properties": {},
          "description": "Mapper executable name. Type: string (or Expression with resultType string)."
        },
        "reducer": {
          "type": "object",
          "properties": {},
          "description": "Reducer executable name. Type: string (or Expression with resultType string)."
        },
        "input": {
          "type": "object",
          "properties": {},
          "description": "Input blob path. Type: string (or Expression with resultType string)."
        },
        "output": {
          "type": "object",
          "properties": {},
          "description": "Output blob path. Type: string (or Expression with resultType string)."
        },
        "filePaths": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Paths to streaming job files. Can be directories."
        },
        "fileLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "combiner": {
          "type": "object",
          "properties": {},
          "description": "Combiner executable name. Type: string (or Expression with resultType string)."
        },
        "commandEnvironment": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Command line environment values."
        },
        "defines": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows user to specify defines for streaming job request."
        }
      },
      "required": [
        "mapper",
        "reducer",
        "input",
        "output",
        "filePaths"
      ],
      "description": "HDInsight streaming activity properties."
    },
    "HiveLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HiveLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Hive Server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Hive"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Hive Server linked service."
    },
    "HiveLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable)."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Hive server uses to listen for client connections."
        },
        "serverType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "HiveServer1",
                "HiveServer2",
                "HiveThriftServer"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of Hive server."
        },
        "thriftTransportProtocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Binary",
                "SASL",
                "HTTP "
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The transport protocol to use in the Thrift layer."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "Username",
                "UsernameAndPassword",
                "WindowsAzureHDInsightService"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication method used to access the Hive server."
        },
        "serviceDiscoveryMode": {
          "type": "object",
          "properties": {},
          "description": "true to indicate using the ZooKeeper service, false not."
        },
        "zooKeeperNameSpace": {
          "type": "object",
          "properties": {},
          "description": "The namespace on ZooKeeper under which Hive Server 2 nodes are added."
        },
        "useNativeQuery": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name that you use to access Hive Server."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "httpPath": {
          "type": "object",
          "properties": {},
          "description": "The partial URL corresponding to the Hive server."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        },
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host",
        "authenticationType"
      ],
      "description": "Hive Server linked service properties."
    },
    "HiveObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HiveObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Hive Server dataset."
    },
    "HiveSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "HiveSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Hive Server source."
    },
    "HttpDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HttpDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this dataset type."
        },
        "type": {
          "type": "string",
          "enum": [
            "HttpFile"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "A file in an HTTP web server."
    },
    "HttpDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "relativeUrl": {
          "type": "object",
          "properties": {},
          "description": "The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string)."
        },
        "requestMethod": {
          "type": "object",
          "properties": {},
          "description": "The HTTP method for the HTTP request. Type: string (or Expression with resultType string)."
        },
        "requestBody": {
          "type": "object",
          "properties": {},
          "description": "The body for the HTTP request. Type: string (or Expression with resultType string)."
        },
        "additionalHeaders": {
          "type": "object",
          "properties": {},
          "description": "The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1\r\n...\r\nrequest-header-name-n:request-header-value-n Type: string (or Expression with resultType string)."
        },
        "format": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetStorageFormat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format definition of a storage."
        },
        "compression": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetCompression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression method used on a dataset."
        }
      },
      "description": "Properties specific to this dataset type."
    },
    "HttpLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HttpLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        },
        "type": {
          "type": "string",
          "enum": [
            "HttpServer"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for an HTTP source."
    },
    "HttpLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "url": {
          "type": "object",
          "properties": {},
          "description": "The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Anonymous",
                "Digest",
                "Windows",
                "ClientCertificate"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to be used to connect to the HTTP server."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "embeddedCertData": {
          "type": "object",
          "properties": {},
          "description": "Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
        },
        "certThumbprint": {
          "type": "object",
          "properties": {},
          "description": "Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "enableServerCertificateValidation": {
          "type": "object",
          "properties": {},
          "description": "If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "url"
      ],
      "description": "Properties specific to this linked service type."
    },
    "HttpSource": {
      "type": "object",
      "properties": {
        "httpRequestTimeout": {
          "type": "object",
          "properties": {},
          "description": "Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "HttpSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for an HTTP file."
    },
    "HubspotLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HubspotLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Hubspot Service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Hubspot"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Hubspot Service linked service."
    },
    "HubspotLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with your Hubspot application."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "refreshToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "clientId"
      ],
      "description": "Hubspot Service linked service properties."
    },
    "HubspotObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HubspotObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Hubspot Service dataset."
    },
    "HubspotSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "HubspotSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Hubspot Service source."
    },
    "IfConditionActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IfConditionActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "IfCondition activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "IfCondition"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression."
    },
    "IfConditionActivityTypeProperties": {
      "type": "object",
      "properties": {
        "expression": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        },
        "ifTrueActivities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action."
        },
        "ifFalseActivities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action."
        }
      },
      "required": [
        "expression"
      ],
      "description": "IfCondition activity properties."
    },
    "ImpalaLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImpalaLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Impala server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Impala"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Impala server linked service."
    },
    "ImpalaLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The IP address or host name of the Impala server. (i.e. 192.168.222.160)"
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Impala server uses to listen for client connections. The default value is 21050."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "SASLUsername",
                "UsernameAndPassword"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to use."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name used to access the Impala server. The default value is anonymous when using SASLUsername."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        },
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host",
        "authenticationType"
      ],
      "description": "Impala server linked service properties."
    },
    "ImpalaObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ImpalaObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Impala server dataset."
    },
    "ImpalaSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ImpalaSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Impala server source."
    },
    "IntegrationRuntime": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ManagedIntegrationRuntime"
        },
        {
          "$ref": "#/definitions/SelfHostedIntegrationRuntime"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "description": {
          "type": "string",
          "description": "Integration runtime description."
        }
      },
      "description": "Azure Data Factory nested object which serves as a compute resource for activities."
    },
    "IntegrationRuntimeComputeProperties": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "location": {
          "type": "string",
          "description": "The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities"
        },
        "nodeSize": {
          "type": "string",
          "description": "The node size requirement to managed integration runtime."
        },
        "numberOfNodes": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The required number of nodes for managed integration runtime."
        },
        "maxParallelExecutionsPerNode": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Maximum parallel executions count per node for managed integration runtime."
        },
        "vNetProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeVNetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "VNet properties for managed integration runtime."
        }
      },
      "description": "The compute resource properties for managed integration runtime."
    },
    "IntegrationRuntimeCustomSetupScriptProperties": {
      "type": "object",
      "properties": {
        "blobContainerUri": {
          "type": "string",
          "description": "The URI of the Azure blob container that contains the custom setup script."
        },
        "sasToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecureString"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
        }
      },
      "description": "Custom setup script properties for a managed dedicated integration runtime."
    },
    "IntegrationRuntimeDataProxyProperties": {
      "type": "object",
      "properties": {
        "connectVia": {
          "oneOf": [
            {
              "$ref": "#/definitions/EntityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The entity reference."
        },
        "stagingLinkedService": {
          "oneOf": [
            {
              "$ref": "#/definitions/EntityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The entity reference."
        },
        "path": {
          "type": "string",
          "description": "The path to contain the staged data in the Blob storage."
        }
      },
      "description": "Data proxy properties for a managed dedicated integration runtime."
    },
    "IntegrationRuntimeReference": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "IntegrationRuntimeReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Type of integration runtime."
        },
        "referenceName": {
          "type": "string",
          "description": "Reference integration runtime name."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        }
      },
      "required": [
        "type",
        "referenceName"
      ],
      "description": "Integration runtime reference type."
    },
    "IntegrationRuntimeSsisCatalogInfo": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "catalogServerEndpoint": {
          "type": "string",
          "description": "The catalog database server URL."
        },
        "catalogAdminUserName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "description": "The administrator user name of catalog database."
        },
        "catalogAdminPassword": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecureString"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
        },
        "catalogPricingTier": {
          "type": "string",
          "description": "The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/"
        }
      },
      "description": "Catalog information for managed dedicated integration runtime."
    },
    "IntegrationRuntimeSsisProperties": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "catalogInfo": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeSsisCatalogInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Catalog information for managed dedicated integration runtime."
        },
        "licenseType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "BasePrice",
                "LicenseIncluded"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "License type for bringing your own license scenario."
        },
        "customSetupScriptProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeCustomSetupScriptProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Custom setup script properties for a managed dedicated integration runtime."
        },
        "dataProxyProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeDataProxyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Data proxy properties for a managed dedicated integration runtime."
        },
        "edition": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Standard",
                "Enterprise"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The edition for the SSIS Integration Runtime."
        }
      },
      "description": "SSIS properties for managed integration runtime."
    },
    "IntegrationRuntimeVNetProperties": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "vNetId": {
          "type": "string",
          "description": "The ID of the VNet that this integration runtime will join."
        },
        "subnet": {
          "type": "string",
          "description": "The name of the subnet this integration runtime will join."
        }
      },
      "description": "VNet properties for managed integration runtime."
    },
    "JiraLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JiraLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Jira Service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Jira"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Jira Service linked service."
    },
    "JiraLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The IP address or host name of the Jira service. (e.g. jira.example.com)"
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name that you use to access Jira Service."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host",
        "username"
      ],
      "description": "Jira Service linked service properties."
    },
    "JiraObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JiraObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Jira Service dataset."
    },
    "JiraSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "JiraSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Jira Service source."
    },
    "JsonFormat": {
      "type": "object",
      "properties": {
        "filePattern": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "setOfObjects",
                "arrayOfObjects"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive."
        },
        "nestingSeparator": {
          "type": "object",
          "properties": {},
          "description": "The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string)."
        },
        "encodingName": {
          "type": "object",
          "properties": {},
          "description": "The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string)."
        },
        "jsonNodeReference": {
          "type": "object",
          "properties": {},
          "description": "The JSONPath of the JSON array element to be flattened. Example: \"$.ArrayPath\". Type: string (or Expression with resultType string)."
        },
        "jsonPathDefinition": {
          "type": "object",
          "properties": {},
          "description": "The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with \"$\"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {\"Column1\": \"$.Column1Path\", \"Column2\": \"Column2PathInArray\"}. Type: object (or Expression with resultType object)."
        },
        "type": {
          "type": "string",
          "enum": [
            "JsonFormat"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The data stored in JSON format."
    },
    "LinkedIntegrationRuntimeKey": {
      "type": "object",
      "properties": {
        "key": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecureString"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
        },
        "authorizationType": {
          "type": "string",
          "enum": [
            "Key"
          ]
        }
      },
      "required": [
        "key",
        "authorizationType"
      ],
      "description": "The base definition of a secret type."
    },
    "LinkedIntegrationRuntimeProperties": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/LinkedIntegrationRuntimeKey"
        },
        {
          "$ref": "#/definitions/LinkedIntegrationRuntimeRbac"
        }
      ],
      "properties": {},
      "description": "The base definition of a secret type."
    },
    "LinkedIntegrationRuntimeRbac": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource ID of the integration runtime to be shared."
        },
        "authorizationType": {
          "type": "string",
          "enum": [
            "RBAC"
          ]
        }
      },
      "required": [
        "resourceId",
        "authorizationType"
      ],
      "description": "The base definition of a secret type."
    },
    "LinkedIntegrationRuntimeTypeProperties": {
      "type": "object",
      "properties": {
        "linkedInfo": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedIntegrationRuntimeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        }
      },
      "description": "The base definition of a secret type."
    },
    "LinkedService": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AzureStorageLinkedService"
        },
        {
          "$ref": "#/definitions/AzureSqlDWLinkedService"
        },
        {
          "$ref": "#/definitions/SqlServerLinkedService"
        },
        {
          "$ref": "#/definitions/AzureSqlDatabaseLinkedService"
        },
        {
          "$ref": "#/definitions/AzureBatchLinkedService"
        },
        {
          "$ref": "#/definitions/AzureKeyVaultLinkedService"
        },
        {
          "$ref": "#/definitions/CosmosDbLinkedService"
        },
        {
          "$ref": "#/definitions/DynamicsLinkedService"
        },
        {
          "$ref": "#/definitions/HDInsightLinkedService"
        },
        {
          "$ref": "#/definitions/FileServerLinkedService"
        },
        {
          "$ref": "#/definitions/OracleLinkedService"
        },
        {
          "$ref": "#/definitions/AzureMySqlLinkedService"
        },
        {
          "$ref": "#/definitions/MySqlLinkedService"
        },
        {
          "$ref": "#/definitions/PostgreSqlLinkedService"
        },
        {
          "$ref": "#/definitions/SybaseLinkedService"
        },
        {
          "$ref": "#/definitions/Db2LinkedService"
        },
        {
          "$ref": "#/definitions/TeradataLinkedService"
        },
        {
          "$ref": "#/definitions/AzureMLLinkedService"
        },
        {
          "$ref": "#/definitions/OdbcLinkedService"
        },
        {
          "$ref": "#/definitions/HdfsLinkedService"
        },
        {
          "$ref": "#/definitions/ODataLinkedService"
        },
        {
          "$ref": "#/definitions/WebLinkedService"
        },
        {
          "$ref": "#/definitions/CassandraLinkedService"
        },
        {
          "$ref": "#/definitions/MongoDbLinkedService"
        },
        {
          "$ref": "#/definitions/AzureDataLakeStoreLinkedService"
        },
        {
          "$ref": "#/definitions/SalesforceLinkedService"
        },
        {
          "$ref": "#/definitions/SapCloudForCustomerLinkedService"
        },
        {
          "$ref": "#/definitions/SapEccLinkedService"
        },
        {
          "$ref": "#/definitions/AmazonS3LinkedService"
        },
        {
          "$ref": "#/definitions/AmazonRedshiftLinkedService"
        },
        {
          "$ref": "#/definitions/CustomDataSourceLinkedService"
        },
        {
          "$ref": "#/definitions/AzureSearchLinkedService"
        },
        {
          "$ref": "#/definitions/HttpLinkedService"
        },
        {
          "$ref": "#/definitions/FtpServerLinkedService"
        },
        {
          "$ref": "#/definitions/SftpServerLinkedService"
        },
        {
          "$ref": "#/definitions/SapBWLinkedService"
        },
        {
          "$ref": "#/definitions/SapHanaLinkedService"
        },
        {
          "$ref": "#/definitions/AmazonMWSLinkedService"
        },
        {
          "$ref": "#/definitions/AzurePostgreSqlLinkedService"
        },
        {
          "$ref": "#/definitions/ConcurLinkedService"
        },
        {
          "$ref": "#/definitions/CouchbaseLinkedService"
        },
        {
          "$ref": "#/definitions/DrillLinkedService"
        },
        {
          "$ref": "#/definitions/EloquaLinkedService"
        },
        {
          "$ref": "#/definitions/GoogleBigQueryLinkedService"
        },
        {
          "$ref": "#/definitions/GreenplumLinkedService"
        },
        {
          "$ref": "#/definitions/HBaseLinkedService"
        },
        {
          "$ref": "#/definitions/HiveLinkedService"
        },
        {
          "$ref": "#/definitions/HubspotLinkedService"
        },
        {
          "$ref": "#/definitions/ImpalaLinkedService"
        },
        {
          "$ref": "#/definitions/JiraLinkedService"
        },
        {
          "$ref": "#/definitions/MagentoLinkedService"
        },
        {
          "$ref": "#/definitions/MariaDBLinkedService"
        },
        {
          "$ref": "#/definitions/MarketoLinkedService"
        },
        {
          "$ref": "#/definitions/PaypalLinkedService"
        },
        {
          "$ref": "#/definitions/PhoenixLinkedService"
        },
        {
          "$ref": "#/definitions/PrestoLinkedService"
        },
        {
          "$ref": "#/definitions/QuickBooksLinkedService"
        },
        {
          "$ref": "#/definitions/ServiceNowLinkedService"
        },
        {
          "$ref": "#/definitions/ShopifyLinkedService"
        },
        {
          "$ref": "#/definitions/SparkLinkedService"
        },
        {
          "$ref": "#/definitions/SquareLinkedService"
        },
        {
          "$ref": "#/definitions/XeroLinkedService"
        },
        {
          "$ref": "#/definitions/ZohoLinkedService"
        },
        {
          "$ref": "#/definitions/VerticaLinkedService"
        },
        {
          "$ref": "#/definitions/NetezzaLinkedService"
        },
        {
          "$ref": "#/definitions/SalesforceMarketingCloudLinkedService"
        },
        {
          "$ref": "#/definitions/HDInsightOnDemandLinkedService"
        },
        {
          "$ref": "#/definitions/AzureDataLakeAnalyticsLinkedService"
        },
        {
          "$ref": "#/definitions/AzureDatabricksLinkedService"
        },
        {
          "$ref": "#/definitions/ResponsysLinkedService"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "connectVia": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Integration runtime reference type."
        },
        "description": {
          "type": "string",
          "description": "Linked service description."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ParameterSpecification"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of all parameters for an entity."
        },
        "annotations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of tags that can be used for describing the Dataset."
        }
      },
      "description": "The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource."
    },
    "LinkedServiceReference": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "LinkedServiceReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "referenceName": {
          "type": "string",
          "description": "Reference LinkedService name."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        }
      },
      "required": [
        "type",
        "referenceName"
      ],
      "description": "Linked service reference type."
    },
    "LookupActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LookupActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Lookup activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Lookup"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Lookup activity."
    },
    "LookupActivityTypeProperties": {
      "type": "object",
      "properties": {
        "source": {
          "oneOf": [
            {
              "$ref": "#/definitions/CopySource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A copy activity source."
        },
        "dataset": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatasetReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Dataset reference type."
        },
        "firstRowOnly": {
          "type": "object",
          "properties": {},
          "description": "Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "source",
        "dataset"
      ],
      "description": "Lookup activity properties."
    },
    "MagentoLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MagentoLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Magento server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Magento"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Magento server linked service."
    },
    "MagentoLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The URL of the Magento instance. (i.e. 192.168.222.110/magento3)"
        },
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ],
      "description": "Magento server linked service properties."
    },
    "MagentoObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MagentoObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Magento server dataset."
    },
    "MagentoSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MagentoSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Magento server source."
    },
    "ManagedIntegrationRuntime": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedIntegrationRuntimeTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed integration runtime type properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Managed"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Managed integration runtime, including managed elastic and managed dedicated integration runtimes."
    },
    "ManagedIntegrationRuntimeTypeProperties": {
      "type": "object",
      "properties": {
        "computeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeComputeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compute resource properties for managed integration runtime."
        },
        "ssisProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/IntegrationRuntimeSsisProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS properties for managed integration runtime."
        }
      },
      "description": "Managed integration runtime type properties."
    },
    "MariaDBLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MariaDBLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MariaDB server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "MariaDB"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "MariaDB server linked service."
    },
    "MariaDBLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "MariaDB server linked service properties."
    },
    "MariaDBSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MariaDBSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity MariaDB server source."
    },
    "MariaDBTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MariaDBTable"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "MariaDB server dataset."
    },
    "MarketoLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MarketoLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Marketo server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Marketo"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Marketo server linked service."
    },
    "MarketoLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)"
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client Id of your Marketo service."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "endpoint",
        "clientId"
      ],
      "description": "Marketo server linked service properties."
    },
    "MarketoObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MarketoObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Marketo server dataset."
    },
    "MarketoSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MarketoSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Marketo server source."
    },
    "MongoDbCollectionDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbCollectionDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MongoDB database dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "MongoDbCollection"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The MongoDB database dataset."
    },
    "MongoDbCollectionDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "collectionName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the MongoDB database. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "collectionName"
      ],
      "description": "MongoDB database dataset properties."
    },
    "MongoDbLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDbLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MongoDB linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "MongoDb"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for MongoDb data source."
    },
    "MongoDbLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "server": {
          "type": "object",
          "properties": {},
          "description": "The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Anonymous"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to be used to connect to the MongoDB database."
        },
        "databaseName": {
          "type": "object",
          "properties": {},
          "description": "The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "authSource": {
          "type": "object",
          "properties": {},
          "description": "Database to verify the username and password. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "databaseName"
      ],
      "description": "MongoDB linked service properties."
    },
    "MongoDbSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MongoDbSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for a MongoDB database."
    },
    "MultiplePipelineTrigger": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ScheduleTrigger"
        },
        {
          "$ref": "#/definitions/BlobTrigger"
        },
        {
          "$ref": "#/definitions/BlobEventsTrigger"
        }
      ],
      "properties": {
        "pipelines": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TriggerPipelineReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipelines that need to be started."
        },
        "type": {
          "type": "string",
          "enum": [
            "MultiplePipelineTrigger"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Base class for all triggers that support one to many model for trigger to pipeline."
    },
    "MySqlLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MySqlLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MySQL linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "MySql"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for MySQL data source."
    },
    "MySqlLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "MySQL linked service properties."
    },
    "NetezzaLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetezzaLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Netezza linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Netezza"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Netezza linked service."
    },
    "NetezzaLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Netezza linked service properties."
    },
    "NetezzaSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "NetezzaSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Netezza source."
    },
    "NetezzaTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "NetezzaTable"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Netezza dataset."
    },
    "ODataLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ODataLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "OData linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "OData"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Open Data Protocol (OData) linked service."
    },
    "ODataLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "url": {
          "type": "object",
          "properties": {},
          "description": "The URL of the OData service endpoint. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Anonymous"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Type of authentication used to connect to the OData service."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "User name of the OData service. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "OData linked service properties."
    },
    "ODataResourceDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ODataResourceDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "OData dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "ODataResource"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The Open Data Protocol (OData) resource dataset."
    },
    "ODataResourceDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {},
          "description": "The OData resource path. Type: string (or Expression with resultType string)."
        }
      },
      "description": "OData dataset properties."
    },
    "OdbcLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OdbcLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ODBC linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Odbc"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Open Database Connectivity (ODBC) linked service."
    },
    "OdbcLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "authenticationType": {
          "type": "object",
          "properties": {},
          "description": "Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "User name for Basic authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "ODBC linked service properties."
    },
    "OdbcSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "OdbcSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity ODBC sink."
    },
    "OracleLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OracleLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Oracle database linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Oracle"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Oracle database."
    },
    "OracleLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "Oracle database linked service properties."
    },
    "OracleSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "OracleSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Oracle sink."
    },
    "OracleSource": {
      "type": "object",
      "properties": {
        "oracleReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "Oracle reader query. Type: string (or Expression with resultType string)."
        },
        "queryTimeout": {
          "type": "object",
          "properties": {},
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "type": {
          "type": "string",
          "enum": [
            "OracleSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Oracle source."
    },
    "OracleTableDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OracleTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "On-premises Oracle dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "OracleTable"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The on-premises Oracle database dataset."
    },
    "OracleTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the on-premises Oracle database. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ],
      "description": "On-premises Oracle dataset properties."
    },
    "OrcFormat": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "OrcFormat"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The data stored in Optimized Row Columnar (ORC) format."
    },
    "ParameterSpecification": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Object",
                "String",
                "Int",
                "Float",
                "Bool",
                "Array",
                "SecureString"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Parameter type."
        },
        "defaultValue": {
          "type": "object",
          "properties": {},
          "description": "Default value of parameter."
        }
      },
      "required": [
        "type"
      ],
      "description": "Definition of a single parameter for an entity."
    },
    "ParquetFormat": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ParquetFormat"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The data stored in Parquet format."
    },
    "PaypalLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PaypalLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Paypal Service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Paypal"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Paypal Service linked service."
    },
    "PaypalLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)"
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with your PayPal application."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host",
        "clientId"
      ],
      "description": "Paypal Service linked service properties."
    },
    "PaypalObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PaypalObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Paypal Service dataset."
    },
    "PaypalSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "PaypalSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Paypal Service source."
    },
    "PhoenixLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PhoenixLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Phoenix server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Phoenix"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Phoenix server linked service."
    },
    "PhoenixLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)"
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765."
        },
        "httpPath": {
          "type": "object",
          "properties": {},
          "description": "The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "UsernameAndPassword",
                "WindowsAzureHDInsightService"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication mechanism used to connect to the Phoenix server."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name used to connect to the Phoenix server."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        },
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host",
        "authenticationType"
      ],
      "description": "Phoenix server linked service properties."
    },
    "PhoenixObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PhoenixObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Phoenix server dataset."
    },
    "PhoenixSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "PhoenixSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Phoenix server source."
    },
    "Pipeline": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the pipeline."
        },
        "activities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities in pipeline."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ParameterSpecification"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of all parameters for an entity."
        },
        "concurrency": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The max number of concurrent runs for the pipeline."
        },
        "annotations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of tags that can be used for describing the Pipeline."
        }
      },
      "description": "A data factory pipeline."
    },
    "PipelineReference": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "PipelineReference"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline reference type."
        },
        "referenceName": {
          "type": "string",
          "description": "Reference pipeline name."
        },
        "name": {
          "type": "string",
          "description": "Reference name."
        }
      },
      "required": [
        "type",
        "referenceName"
      ],
      "description": "Pipeline reference type."
    },
    "PolybaseSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "rejectType": {
          "type": "object",
          "properties": {},
          "description": "Reject type."
        },
        "rejectValue": {
          "type": "object",
          "properties": {},
          "description": "Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0."
        },
        "rejectSampleValue": {
          "type": "object",
          "properties": {},
          "description": "Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "useTypeDefault": {
          "type": "object",
          "properties": {},
          "description": "Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "description": "PolyBase settings."
    },
    "PostgreSqlLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PostgreSqlLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "PostgreSQL linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "PostgreSql"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for PostgreSQL data source."
    },
    "PostgreSqlLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "PostgreSQL linked service properties."
    },
    "PrestoLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrestoLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Presto server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Presto"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Presto server linked service."
    },
    "PrestoLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The IP address or host name of the Presto server. (i.e. 192.168.222.160)"
        },
        "serverVersion": {
          "type": "object",
          "properties": {},
          "description": "The version of the Presto server. (i.e. 0.148-t)"
        },
        "catalog": {
          "type": "object",
          "properties": {},
          "description": "The catalog context for all request against the server."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Presto server uses to listen for client connections. The default value is 8080."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "LDAP"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication mechanism used to connect to the Presto server."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name used to connect to the Presto server."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        },
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "timeZoneID": {
          "type": "object",
          "properties": {},
          "description": "The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host",
        "serverVersion",
        "catalog",
        "authenticationType"
      ],
      "description": "Presto server linked service properties."
    },
    "PrestoObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "PrestoObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Presto server dataset."
    },
    "PrestoSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "PrestoSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Presto server source."
    },
    "QuickBooksLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/QuickBooksLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "QuickBooks server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "QuickBooks"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "QuickBooks server linked service."
    },
    "QuickBooksLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)"
        },
        "companyId": {
          "type": "object",
          "properties": {},
          "description": "The company ID of the QuickBooks company to authorize."
        },
        "consumerKey": {
          "type": "object",
          "properties": {},
          "description": "The consumer key for OAuth 1.0 authentication."
        },
        "consumerSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "accessTokenSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "endpoint",
        "companyId",
        "consumerKey",
        "consumerSecret",
        "accessToken",
        "accessTokenSecret"
      ],
      "description": "QuickBooks server linked service properties."
    },
    "QuickBooksObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "QuickBooksObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "QuickBooks server dataset."
    },
    "QuickBooksSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "QuickBooksSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity QuickBooks server source."
    },
    "RecurrenceSchedule": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "minutes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The minutes."
        },
        "hours": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The hours."
        },
        "weekDays": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Sunday",
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The days of the week."
        },
        "monthDays": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The month days."
        },
        "monthlyOccurrences": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecurrenceScheduleOccurrence"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The monthly occurrences."
        }
      },
      "description": "The recurrence schedule."
    },
    "RecurrenceScheduleOccurrence": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "day": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The day of the week."
        },
        "occurrence": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The occurrence."
        }
      },
      "description": "The recurrence schedule occurrence."
    },
    "RedirectIncompatibleRowSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "linkedServiceName": {
          "type": "object",
          "properties": {},
          "description": "Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string)."
        },
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "linkedServiceName"
      ],
      "description": "Redirect incompatible row settings"
    },
    "RedshiftUnloadSettings": {
      "type": "object",
      "properties": {
        "s3LinkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "bucketName": {
          "type": "object",
          "properties": {},
          "description": "The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "s3LinkedServiceName",
        "bucketName"
      ],
      "description": "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3."
    },
    "RelationalSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "RelationalSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for various relational databases."
    },
    "RelationalTableDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/RelationalTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Relational table dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "RelationalTable"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The relational table dataset."
    },
    "RelationalTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The relational table name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Relational table dataset properties."
    },
    "ResponsysLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResponsysLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Responsys linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Responsys"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Responsys linked service."
    },
    "ResponsysLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Responsys server."
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with the Responsys application. Type: string (or Expression with resultType string)."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "endpoint",
        "clientId"
      ],
      "description": "Responsys linked service properties."
    },
    "ResponsysObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ResponsysObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Responsys dataset."
    },
    "ResponsysSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ResponsysSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Responsys source."
    },
    "RetryPolicy": {
      "type": "object",
      "properties": {
        "count": {
          "type": "object",
          "properties": {},
          "description": "Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "intervalInSeconds": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 30,
              "maximum": 86400
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Interval between retries in seconds. Default is 30."
        }
      },
      "description": "Execution policy for an activity."
    },
    "SalesforceLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SalesforceLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Salesforce linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Salesforce"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for Salesforce."
    },
    "SalesforceLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "environmentUrl": {
          "type": "object",
          "properties": {},
          "description": "The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "securityToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Salesforce linked service properties."
    },
    "SalesforceMarketingCloudLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Salesforce Marketing Cloud linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "SalesforceMarketingCloud"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Salesforce Marketing Cloud linked service."
    },
    "SalesforceMarketingCloudLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string)."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "clientId"
      ],
      "description": "Salesforce Marketing Cloud linked service properties."
    },
    "SalesforceMarketingCloudObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SalesforceMarketingCloudObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Salesforce Marketing Cloud dataset."
    },
    "SalesforceMarketingCloudSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SalesforceMarketingCloudSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Salesforce Marketing Cloud source."
    },
    "SalesforceObjectDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SalesforceObjectDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Salesforce object dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "SalesforceObject"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The Salesforce object dataset."
    },
    "SalesforceObjectDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "objectApiName": {
          "type": "object",
          "properties": {},
          "description": "The Salesforce object API name. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Salesforce object dataset properties."
    },
    "SalesforceSink": {
      "type": "object",
      "properties": {
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "The write behavior for the operation. Default is Insert."
        },
        "externalIdFieldName": {
          "type": "object",
          "properties": {},
          "description": "The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string)."
        },
        "ignoreNullValues": {
          "type": "object",
          "properties": {},
          "description": "The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SalesforceSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Salesforce sink."
    },
    "SalesforceSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "readBehavior": {
          "type": "object",
          "properties": {},
          "description": "The read behavior for the operation. Default is Query."
        },
        "type": {
          "type": "string",
          "enum": [
            "SalesforceSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Salesforce source."
    },
    "SapBWLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapBWLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapBW"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "SAP Business Warehouse Linked Service."
    },
    "SapBWLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "server": {
          "type": "object",
          "properties": {},
          "description": "Host name of the SAP BW instance. Type: string (or Expression with resultType string)."
        },
        "systemNumber": {
          "type": "object",
          "properties": {},
          "description": "System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string)."
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "Username to access the SAP BW server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "systemNumber",
        "clientId"
      ],
      "description": "Properties specific to this linked service type."
    },
    "SapCloudForCustomerLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapCloudForCustomerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SAP Cloud for Customer linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapCloudForCustomer"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for SAP Cloud for Customer."
    },
    "SapCloudForCustomerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "url": {
          "type": "object",
          "properties": {},
          "description": "The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The username for Basic authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "SAP Cloud for Customer linked service properties."
    },
    "SapCloudForCustomerResourceDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapCloudForCustomerResourceDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sap Cloud For Customer OData resource dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapCloudForCustomerResource"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The path of the SAP Cloud for Customer OData entity."
    },
    "SapCloudForCustomerResourceDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "path"
      ],
      "description": "Sap Cloud For Customer OData resource dataset properties."
    },
    "SapCloudForCustomerSink": {
      "type": "object",
      "properties": {
        "writeBehavior": {
          "type": "object",
          "properties": {},
          "description": "The write behavior for the operation. Default is 'Insert'."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapCloudForCustomerSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SAP Cloud for Customer sink."
    },
    "SapCloudForCustomerSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "SAP Cloud for Customer OData query. For example, \"$top=1\". Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapCloudForCustomerSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for SAP Cloud for Customer source."
    },
    "SapEccLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapEccLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SAP ECC linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapEcc"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for SAP ERP Central Component(SAP ECC)."
    },
    "SapEccLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "string",
          "description": "The username for Basic authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "string",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "SAP ECC linked service properties."
    },
    "SapEccResourceDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapEccResourceDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sap ECC OData resource dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapEccResource"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The path of the SAP ECC OData entity."
    },
    "SapEccResourceDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path of the SAP ECC OData entity. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "path"
      ],
      "description": "Sap ECC OData resource dataset properties."
    },
    "SapEccSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "SAP ECC OData query. For example, \"$top=1\". Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapEccSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for SAP ECC source."
    },
    "SapHanaLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SapHanaLinkedServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        },
        "type": {
          "type": "string",
          "enum": [
            "SapHana"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "SAP HANA Linked Service."
    },
    "SapHanaLinkedServiceProperties": {
      "type": "object",
      "properties": {
        "server": {
          "type": "object",
          "properties": {},
          "description": "Host name of the SAP HANA server. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Windows"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to be used to connect to the SAP HANA server."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "Username to access the SAP HANA server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server"
      ],
      "description": "Properties specific to this linked service type."
    },
    "ScheduleTrigger": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Schedule Trigger properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "ScheduleTrigger"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Trigger that creates pipeline runs periodically, on schedule."
    },
    "ScheduleTriggerRecurrence": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "frequency": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "NotSpecified",
                "Minute",
                "Hour",
                "Day",
                "Week",
                "Month",
                "Year"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The frequency."
        },
        "interval": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The interval."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone."
        },
        "schedule": {
          "oneOf": [
            {
              "$ref": "#/definitions/RecurrenceSchedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The recurrence schedule."
        }
      },
      "description": "The workflow trigger recurrence."
    },
    "ScheduleTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "recurrence": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleTriggerRecurrence"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The workflow trigger recurrence."
        }
      },
      "required": [
        "recurrence"
      ],
      "description": "Schedule Trigger properties."
    },
    "SecretBase": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/SecureString"
        },
        {
          "$ref": "#/definitions/AzureKeyVaultSecretReference"
        }
      ],
      "properties": {},
      "description": "The base definition of a secret type."
    },
    "SecureString": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of secure string."
        },
        "type": {
          "type": "string",
          "enum": [
            "SecureString"
          ]
        }
      },
      "required": [
        "value",
        "type"
      ],
      "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
    },
    "SelfHostedIntegrationRuntime": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedIntegrationRuntimeTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "type": {
          "type": "string",
          "enum": [
            "SelfHosted"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Self-hosted integration runtime."
    },
    "ServiceNowLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceNowLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ServiceNow server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "ServiceNow"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "ServiceNow server linked service."
    },
    "ServiceNowLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)"
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "OAuth2"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to use."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client id for OAuth2 authentication."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "endpoint",
        "authenticationType"
      ],
      "description": "ServiceNow server linked service properties."
    },
    "ServiceNowObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ServiceNowObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "ServiceNow server dataset."
    },
    "ServiceNowSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ServiceNowSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity ServiceNow server source."
    },
    "SftpServerLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SftpServerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties specific to this linked service type."
        },
        "type": {
          "type": "string",
          "enum": [
            "Sftp"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "A linked service for an SSH File Transfer Protocol (SFTP) server. "
    },
    "SftpServerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The SFTP server host name. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "SshPublicKey"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication type to be used to connect to the FTP server."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The username used to log on to the SFTP server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "privateKeyPath": {
          "type": "object",
          "properties": {},
          "description": "The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string)."
        },
        "privateKeyContent": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "passPhrase": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "skipHostKeyValidation": {
          "type": "object",
          "properties": {},
          "description": "If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "hostKeyFingerprint": {
          "type": "object",
          "properties": {},
          "description": "The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ],
      "description": "Properties specific to this linked service type."
    },
    "ShopifyLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ShopifyLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Shopify Service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Shopify"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Shopify Service linked service."
    },
    "ShopifyLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Shopify server. (i.e. mystore.myshopify.com)"
        },
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ],
      "description": "Shopify Service linked service properties."
    },
    "ShopifyObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ShopifyObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Shopify Service dataset."
    },
    "ShopifySource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ShopifySource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Shopify Service source."
    },
    "SparkLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SparkLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Spark Server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Spark"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Spark Server linked service."
    },
    "SparkLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "IP address or host name of the Spark server"
        },
        "port": {
          "type": "object",
          "properties": {},
          "description": "The TCP port that the Spark server uses to listen for client connections."
        },
        "serverType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SharkServer",
                "SharkServer2",
                "SparkThriftServer"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of Spark server."
        },
        "thriftTransportProtocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Binary",
                "SASL",
                "HTTP "
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The transport protocol to use in the Thrift layer."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Anonymous",
                "Username",
                "UsernameAndPassword",
                "WindowsAzureHDInsightService"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication method used to access the Spark server."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "The user name that you use to access Spark Server."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "httpPath": {
          "type": "object",
          "properties": {},
          "description": "The partial URL corresponding to the Spark server."
        },
        "enableSsl": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false."
        },
        "trustedCertPath": {
          "type": "object",
          "properties": {},
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
        },
        "useSystemTrustStore": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
        },
        "allowHostNameCNMismatch": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host",
        "port",
        "authenticationType"
      ],
      "description": "Spark Server linked service properties."
    },
    "SparkObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SparkObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Spark Server dataset."
    },
    "SparkSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SparkSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Spark Server source."
    },
    "SqlDWSink": {
      "type": "object",
      "properties": {
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "allowPolyBase": {
          "type": "object",
          "properties": {},
          "description": "Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean)."
        },
        "polyBaseSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/PolybaseSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "PolyBase settings."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlDWSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SQL Data Warehouse sink."
    },
    "SqlDWSource": {
      "type": "object",
      "properties": {
        "sqlReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "SQL Data Warehouse reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "type": "object",
          "properties": {},
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlDWSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SQL Data Warehouse source."
    },
    "SqlServerLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlServerLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SQL Server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlServer"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "SQL Server linked service."
    },
    "SqlServerLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "The on-premises Windows authentication user name. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ],
      "description": "SQL Server linked service properties."
    },
    "SqlServerStoredProcedureActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlServerStoredProcedureActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SQL stored procedure activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlServerStoredProcedure"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "SQL stored procedure activity type."
    },
    "SqlServerStoredProcedureActivityTypeProperties": {
      "type": "object",
      "properties": {
        "storedProcedureName": {
          "type": "object",
          "properties": {},
          "description": "Stored procedure name. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\"."
        }
      },
      "required": [
        "storedProcedureName"
      ],
      "description": "SQL stored procedure activity properties."
    },
    "SqlServerTableDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SqlServerTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "On-premises SQL Server dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlServerTable"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The on-premises SQL Server dataset."
    },
    "SqlServerTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "object",
          "properties": {},
          "description": "The table name of the SQL Server dataset. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "tableName"
      ],
      "description": "On-premises SQL Server dataset properties."
    },
    "SqlSink": {
      "type": "object",
      "properties": {
        "sqlWriterStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "SQL writer stored procedure name. Type: string (or Expression with resultType string)."
        },
        "sqlWriterTableType": {
          "type": "object",
          "properties": {},
          "description": "SQL writer table type. Type: string (or Expression with resultType string)."
        },
        "preCopyScript": {
          "type": "object",
          "properties": {},
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SQL stored procedure parameters."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlSink"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SQL sink."
    },
    "SqlSource": {
      "type": "object",
      "properties": {
        "sqlReaderQuery": {
          "type": "object",
          "properties": {},
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "properties": {},
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/StoredProcedureParameter"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\"."
        },
        "type": {
          "type": "string",
          "enum": [
            "SqlSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity SQL source."
    },
    "SquareLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SquareLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Square Service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Square"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Square Service linked service."
    },
    "SquareLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The URL of the Square instance. (i.e. mystore.mysquare.com)"
        },
        "clientId": {
          "type": "object",
          "properties": {},
          "description": "The client ID associated with your Square application."
        },
        "clientSecret": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "redirectUri": {
          "type": "object",
          "properties": {},
          "description": "The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)"
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host",
        "clientId",
        "redirectUri"
      ],
      "description": "Square Service linked service properties."
    },
    "SquareObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SquareObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Square Service dataset."
    },
    "SquareSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "SquareSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Square Service source."
    },
    "SSISAccessCredential": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "object",
          "properties": {},
          "description": "Domain for windows authentication."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "UseName for windows authentication."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        }
      },
      "required": [
        "domain",
        "userName",
        "password"
      ],
      "description": "SSIS access credential."
    },
    "SSISExecutionCredential": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "object",
          "properties": {},
          "description": "Domain for windows authentication."
        },
        "userName": {
          "type": "object",
          "properties": {},
          "description": "UseName for windows authentication."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecureString"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
        }
      },
      "required": [
        "domain",
        "userName",
        "password"
      ],
      "description": "SSIS package execution credential."
    },
    "SSISExecutionParameter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "properties": {},
          "description": "SSIS package execution parameter value. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "value"
      ],
      "description": "SSIS execution parameter."
    },
    "SSISLogLocation": {
      "type": "object",
      "properties": {
        "logPath": {
          "type": "object",
          "properties": {},
          "description": "The SSIS package execution log path. Type: string (or Expression with resultType string)."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "File"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of SSIS log location."
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISLogLocationTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS package execution log location properties."
        }
      },
      "required": [
        "logPath",
        "type",
        "typeProperties"
      ],
      "description": "SSIS package execution log location"
    },
    "SSISLogLocationTypeProperties": {
      "type": "object",
      "properties": {
        "accessCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISAccessCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS access credential."
        },
        "logRefreshInterval": {
          "type": "object",
          "properties": {},
          "description": "Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      },
      "description": "SSIS package execution log location properties."
    },
    "SSISPackageLocation": {
      "type": "object",
      "properties": {
        "packagePath": {
          "type": "object",
          "properties": {},
          "description": "The SSIS package path. Type: string (or Expression with resultType string)."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SSISDB",
                "File"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of SSIS package location."
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISPackageLocationTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS package location properties."
        }
      },
      "required": [
        "packagePath"
      ],
      "description": "SSIS package location."
    },
    "SSISPackageLocationTypeProperties": {
      "type": "object",
      "properties": {
        "packagePassword": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "accessCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/SSISAccessCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSIS access credential."
        },
        "configurationPath": {
          "type": "object",
          "properties": {},
          "description": "The configuration file of the package execution. Type: string (or Expression with resultType string)."
        }
      },
      "description": "SSIS package location properties."
    },
    "SSISPropertyOverride": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "properties": {},
          "description": "SSIS package property override value. Type: string (or Expression with resultType string)."
        },
        "isSensitive": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true"
        }
      },
      "required": [
        "value"
      ],
      "description": "SSIS property override."
    },
    "StagingSettings": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "linkedServiceName": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedServiceReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Linked service reference type."
        },
        "path": {
          "type": "object",
          "properties": {},
          "description": "The path to storage for storing the interim data. Type: string (or Expression with resultType string)."
        },
        "enableCompression": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "linkedServiceName"
      ],
      "description": "Staging settings."
    },
    "StoredProcedureParameter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "properties": {},
          "description": "Stored procedure parameter value. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "object",
          "properties": {},
          "description": "Stored procedure parameter type."
        }
      },
      "required": [
        "value"
      ],
      "description": "SQL stored procedure parameter."
    },
    "SybaseLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SybaseLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sybase linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Sybase"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for Sybase data source."
    },
    "SybaseLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "server": {
          "type": "object",
          "properties": {},
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "database": {
          "type": "object",
          "properties": {},
          "description": "Database name for connection. Type: string (or Expression with resultType string)."
        },
        "schema": {
          "type": "object",
          "properties": {},
          "description": "Schema name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Windows"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AuthenticationType to be used for connection."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ],
      "description": "Sybase linked service properties."
    },
    "TeradataLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TeradataLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Teradata linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Teradata"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Linked service for Teradata data source."
    },
    "TeradataLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "server": {
          "type": "object",
          "properties": {},
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Windows"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AuthenticationType to be used for connection."
        },
        "username": {
          "type": "object",
          "properties": {},
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server"
      ],
      "description": "Teradata linked service properties."
    },
    "TextFormat": {
      "type": "object",
      "properties": {
        "columnDelimiter": {
          "type": "object",
          "properties": {},
          "description": "The column delimiter. Type: string (or Expression with resultType string)."
        },
        "rowDelimiter": {
          "type": "object",
          "properties": {},
          "description": "The row delimiter. Type: string (or Expression with resultType string)."
        },
        "escapeChar": {
          "type": "object",
          "properties": {},
          "description": "The escape character. Type: string (or Expression with resultType string)."
        },
        "quoteChar": {
          "type": "object",
          "properties": {},
          "description": "The quote character. Type: string (or Expression with resultType string)."
        },
        "nullValue": {
          "type": "object",
          "properties": {},
          "description": "The null value string. Type: string (or Expression with resultType string)."
        },
        "encodingName": {
          "type": "object",
          "properties": {},
          "description": "The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string)."
        },
        "treatEmptyAsNull": {
          "type": "object",
          "properties": {},
          "description": "Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "skipLineCount": {
          "type": "object",
          "properties": {},
          "description": "The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer)."
        },
        "firstRowAsHeader": {
          "type": "object",
          "properties": {},
          "description": "When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "type": {
          "type": "string",
          "enum": [
            "TextFormat"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "The data stored in text format."
    },
    "Trigger": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/MultiplePipelineTrigger"
        },
        {
          "$ref": "#/definitions/TumblingWindowTrigger"
        }
      ],
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "description": {
          "type": "string",
          "description": "Trigger description."
        }
      },
      "description": "Azure data factory nested object which contains information about creating pipeline run"
    },
    "TriggerPipelineReference": {
      "type": "object",
      "properties": {
        "pipelineReference": {
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline reference type."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An object mapping parameter names to argument values."
        }
      },
      "description": "Pipeline that needs to be triggered with the given parameters."
    },
    "TumblingWindowTrigger": {
      "type": "object",
      "properties": {
        "pipeline": {
          "oneOf": [
            {
              "$ref": "#/definitions/TriggerPipelineReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pipeline that needs to be triggered with the given parameters."
        },
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TumblingWindowTriggerTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tumbling Window Trigger properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "TumblingWindowTrigger"
          ]
        }
      },
      "required": [
        "pipeline",
        "typeProperties",
        "type"
      ],
      "description": "Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past)."
    },
    "TumblingWindowTriggerTypeProperties": {
      "type": "object",
      "properties": {
        "frequency": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Minute",
                "Hour"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The frequency of the time windows."
        },
        "interval": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The interval of the time windows. The minimum interval allowed is 15 Minutes."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported."
        },
        "delay": {
          "type": "object",
          "properties": {},
          "description": "Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "maxConcurrency": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The max number of parallel time windows (ready for execution) for which a new run is triggered."
        },
        "retryPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/RetryPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Execution policy for an activity."
        }
      },
      "required": [
        "frequency",
        "interval",
        "startTime",
        "maxConcurrency"
      ],
      "description": "Tumbling Window Trigger properties."
    },
    "UntilActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/UntilActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Until activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Until"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier."
    },
    "UntilActivityTypeProperties": {
      "type": "object",
      "properties": {
        "expression": {
          "oneOf": [
            {
              "$ref": "#/definitions/Expression"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory expression definition."
        },
        "timeout": {
          "type": "object",
          "properties": {},
          "description": "Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "activities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Activity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of activities to execute."
        }
      },
      "required": [
        "expression",
        "activities"
      ],
      "description": "Until activity properties."
    },
    "VerticaLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/VerticaLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Vertica linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Vertica"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Vertica linked service."
    },
    "VerticaLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "connectionString": {
          "type": "object",
          "properties": {},
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "description": "Vertica linked service properties."
    },
    "VerticaSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "VerticaSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Vertica source."
    },
    "VerticaTableDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "VerticaTable"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Vertica dataset."
    },
    "WaitActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WaitActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Wait activity properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Wait"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "This activity suspends pipeline execution for the specified interval."
    },
    "WaitActivityTypeProperties": {
      "type": "object",
      "properties": {
        "waitTimeInSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Duration in seconds."
        }
      },
      "required": [
        "waitTimeInSeconds"
      ],
      "description": "Wait activity properties."
    },
    "WebActivity": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebActivityTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Web activity type properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "WebActivity"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Web activity."
    },
    "WebActivityAuthentication": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Web activity authentication (Basic/ClientCertificate/MSI)"
        },
        "pfx": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecureString"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
        },
        "username": {
          "type": "string",
          "description": "Web activity authentication user name for basic authentication."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecureString"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls."
        },
        "resource": {
          "type": "string",
          "description": "Resource for which Azure Auth token will be requested when using MSI Authentication."
        }
      },
      "required": [
        "type"
      ],
      "description": "Web activity authentication properties."
    },
    "WebActivityTypeProperties": {
      "type": "object",
      "properties": {
        "method": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "GET",
                "POST",
                "PUT",
                "DELETE"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Rest API method for target endpoint."
        },
        "url": {
          "type": "object",
          "properties": {},
          "description": "Web activity target endpoint and path. Type: string (or Expression with resultType string)."
        },
        "headers": {
          "type": "object",
          "properties": {},
          "description": "Represents the headers that will be sent to the request. For example, to set the language and type on a request: \"headers\" : { \"Accept-Language\": \"en-us\", \"Content-Type\": \"application/json\" }. Type: string (or Expression with resultType string)."
        },
        "body": {
          "type": "object",
          "properties": {},
          "description": "Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string)."
        },
        "authentication": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebActivityAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Web activity authentication properties."
        },
        "datasets": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatasetReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of datasets passed to web endpoint."
        },
        "linkedServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedServiceReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of linked services passed to web endpoint."
        }
      },
      "required": [
        "method",
        "url"
      ],
      "description": "Web activity type properties."
    },
    "WebAnonymousAuthentication": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "string",
          "enum": [
            "Anonymous"
          ]
        }
      },
      "required": [
        "authenticationType"
      ],
      "description": "A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint."
    },
    "WebBasicAuthentication": {
      "type": "object",
      "properties": {
        "username": {
          "type": "object",
          "properties": {},
          "description": "User name for Basic authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "authenticationType": {
          "type": "string",
          "enum": [
            "Basic"
          ]
        }
      },
      "required": [
        "username",
        "password",
        "authenticationType"
      ],
      "description": "A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint."
    },
    "WebClientCertificateAuthentication": {
      "type": "object",
      "properties": {
        "pfx": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "password": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "authenticationType": {
          "type": "string",
          "enum": [
            "ClientCertificate"
          ]
        }
      },
      "required": [
        "pfx",
        "password",
        "authenticationType"
      ],
      "description": "A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client."
    },
    "WebLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models."
        },
        "type": {
          "type": "string",
          "enum": [
            "Web"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Web linked service."
    },
    "WebLinkedServiceTypeProperties": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/WebAnonymousAuthentication"
        },
        {
          "$ref": "#/definitions/WebBasicAuthentication"
        },
        {
          "$ref": "#/definitions/WebClientCertificateAuthentication"
        }
      ],
      "properties": {
        "url": {
          "type": "object",
          "properties": {},
          "description": "The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ],
      "description": "Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models."
    },
    "WebSource": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "WebSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity source for web page table."
    },
    "WebTableDataset": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebTableDatasetTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Web table dataset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "WebTable"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "The dataset points to a HTML table in the web page."
    },
    "WebTableDatasetTypeProperties": {
      "type": "object",
      "properties": {
        "index": {
          "type": "object",
          "properties": {},
          "description": "The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "path": {
          "type": "object",
          "properties": {},
          "description": "The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "index"
      ],
      "description": "Web table dataset properties."
    },
    "XeroLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/XeroLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Xero Service linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Xero"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Xero Service linked service."
    },
    "XeroLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Xero server. (i.e. api.xero.com)"
        },
        "consumerKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "privateKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ],
      "description": "Xero Service linked service properties."
    },
    "XeroObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "XeroObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Xero Service dataset."
    },
    "XeroSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "XeroSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Xero Service source."
    },
    "ZohoLinkedService": {
      "type": "object",
      "properties": {
        "typeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ZohoLinkedServiceTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Zoho server linked service properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Zoho"
          ]
        }
      },
      "required": [
        "typeProperties",
        "type"
      ],
      "description": "Zoho server linked service."
    },
    "ZohoLinkedServiceTypeProperties": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "object",
          "properties": {},
          "description": "The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)"
        },
        "accessToken": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The base definition of a secret type."
        },
        "useEncryptedEndpoints": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
        },
        "useHostVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
        },
        "usePeerVerification": {
          "type": "object",
          "properties": {},
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
        },
        "encryptedCredential": {
          "type": "object",
          "properties": {},
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "endpoint"
      ],
      "description": "Zoho server linked service properties."
    },
    "ZohoObjectDataset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ZohoObject"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "Zoho server dataset."
    },
    "ZohoSource": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {},
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "ZohoSource"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "A copy activity Zoho server source."
    }
  }
}